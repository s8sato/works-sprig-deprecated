Avoided duplication of nodes; revised markUp func
2019-12-22 23:22:36


markUp :: [(Indent, [Text])] -> [((Node, Node), [Text])]
markUp [(0,[Data.Text.pack $ "iti"]),(1,[Data.Text.pack $ "ni"]),(2,[Data.Text.pack $ "san"]),(0,[Data.Text.pack $ "si"]),(1,[Data.Text.pack $ "go"])]


コンパイラが見逃した
Non-exhaustive patterns in function spanLink'
spanLink' :: [Edge] -> [Edge] -> Graph -> Graph
spanlink' [] _ g            = g
spanLink' (t:ts) [] g       = spanLink' ts g g
spanLink' ((p,at):ts) ((q,ah):hs) g   =
    if keyMatch at ah ah then
        spanLink' ((p,at):ts) hs (spanLink'' p q g)
    else
        spanLink' ((p,at):ts) hs g
2019-12-23 02:52:16




コンパイルは通るのですが実行時に
```
Non-exhaustive patterns in function spanLink'
```
と言われてしまう以下のコードについて
しばらく調べているのですが...どこがよくないのでしょうか
```
type Graph = [Edge]
type Edge = ((Node, Node), [Attr])
type Node  = Int
data Attr  = ...

spanLink' :: [Edge] -> [Edge] -> Graph -> Graph
spanlink' [] _ g                    = g
spanLink' (t:ts) [] g               = spanLink' ts g g
spanLink' ((p,at):ts) ((q,ah):hs) g = 
    if keyMatch at ah ah then
        spanLink' ((p,at):ts) hs (spanLink'' p q g)
    else
        spanLink' ((p,at):ts) hs g
```
