
==================== FINAL INTERFACE ====================
2020-01-04 04:46:57.1920391 UTC

interface server-0.1.0.0-BXb93lA8dnX9nt10x8YmVX:Query 8065
  interface hash: 6ce7dcc1914b1a827e456e96183f00ac
  ABI hash: a53dbe8fb08618838d842997be1bc418
  export-list hash: a9082a51ad939fa1d966fb7cfdd1b27a
  orphan hash: 32695cd87d0398e902287f5202a2de7b
  flag hash: 56266973ac1f89f99983fe7965b5259a
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Query.delSchedulesByUserId
  Query.getAfterMeByTaskId
  Query.getAllTrunkNode
  Query.getBeforeMeByTaskId
  Query.getBudTasksByUserId
  Query.getDoneTasksByUserId
  Query.getDurationsByUserId
  Query.getMaxNode'
  Query.getMeByTaskId
  Query.getSchedulesByTaskId
  Query.getTaskAssignById
  Query.getTaskAssignByTaskId
  Query.getTrunkTasksByUserId
  Query.getUndoneOwnTasksByUserId
  Query.getUndoneTaskAssigns
  Query.getUndoneTasksByUserId
  Query.getUserById
  Query.insDur
  Query.insSchedules
  Query.insTasks
  Query.insUser
  Query.keyFromInt
  Query.setStarSwitched
  Query.setTaskDeadline
  Query.setTaskDone
  Query.setTaskDoneOrUndone
  Query.setTaskLink
  Query.setTaskStarred
  Query.setTaskStartable
  Query.setTaskTitle
  Query.setTaskUser
  Query.setTaskWeight
module dependencies: Entity
package dependencies: Only-0.1 Win32-2.6.1.0 aeson-1.4.6.0
                      aeson-compat-0.3.9 array-0.5.3.0 attoparsec-0.13.2.3
                      attoparsec-iso8601-1.0.1.0 auto-update-0.1.6 base-4.12.0.0
                      base-compat-0.10.5 base-orphans-0.8.1 base64-bytestring-1.0.0.2
                      binary-0.8.6.0 blaze-builder-0.4.1.0 blaze-html-0.9.1.2
                      blaze-markup-0.8.2.3 bytestring-0.10.8.2 case-insensitive-1.2.0.11
                      conduit-1.3.1.1 conduit-extra-1.3.4 containers-0.6.0.1 cookie-0.4.5
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 directory-1.3.3.0
                      dlist-0.8.0.7 easy-file-0.2.2 esqueleto-3.0.0 exceptions-0.10.3
                      fast-logger-2.4.17 filepath-1.4.2.1 ghc-boot-th-8.6.5
                      ghc-prim-0.5.3 hashable-1.2.7.0 http-api-data-0.4.1.1
                      http-types-0.12.3 integer-gmp-1.0.2.0 integer-logarithms-1.0.3
                      lifted-base-0.2.3.12 monad-control-1.0.2.3 monad-logger-0.3.31
                      monad-loops-0.4.3 mtl-2.2.2 old-locale-1.0.0.7 old-time-1.1.0.3
                      path-pieces-0.2.1 persistent-2.9.2 persistent-postgresql-2.9.1
                      persistent-template-2.6.0 postgresql-libpq-0.9.4.2
                      postgresql-simple-0.6.2 primitive-0.6.4.0 random-1.1
                      resource-pool-0.2.3.2 resourcet-1.2.2 scientific-0.3.6.2
                      silently-1.2.5.1 stm-2.5.0.0 stm-chans-3.0.0.4 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 time-1.8.0.2
                      time-compat-1.9.2.2 transformers-0.5.6.2 transformers-base-0.4.5.2
                      unix-compat-0.5.2 unix-time-0.4.7 unliftio-core-0.1.2.0
                      unordered-containers-0.2.10.0 uuid-types-1.0.3 vector-0.12.0.3
orphans: persistent-template-2.6.0:Database.Persist.TH
         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistStore
         attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         vector-0.12.0.3:Data.Vector.Unboxed
         unix-time-0.4.7:Data.UnixTime.Diff
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.6.2:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: Only-0.1:Data.Tuple.Only
                         aeson-1.4.6.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.7:Data.DList ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.31:Control.Monad.Logger
                         persistent-2.9.2:Database.Persist.Class.PersistConfig
                         persistent-2.9.2:Database.Persist.Class.PersistEntity
                         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.9.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.9.1:Database.Persist.Postgresql
                         postgresql-simple-0.6.2:Database.PostgreSQL.Simple.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         server-0.1.0.0-BXb93lA8dnX9nt10x8YmVX:Entity
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Control.Monad.IO.Class eba50379fd761a0a02fefdca35521253
import  -/  base-4.12.0.0:Data.Foldable bdeac546b12282c8986759606b9295a5
import  -/  base-4.12.0.0:GHC.Base fbe365a916ebeeeb4bc1f895dbe83e42
import  -/  base-4.12.0.0:GHC.Real 3b42f3125c1d17d4e4b4437a3c97310f
import  -/  base-4.12.0.0:Prelude 80c668cb99fbafebd524c5e897f8c982
import  -/  esqueleto-3.0.0:Database.Esqueleto 6ac4220f85e8bdba091db6feac6ae0ef
import  -/  esqueleto-3.0.0:Database.Esqueleto.Internal.Internal 2f0651bf0ed31eebbba61f6ed9e1caf2
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  persistent-2.9.2:Database.Persist.Class.PersistEntity cfe839cf921a1b4892de7875b971066e
import  -/  persistent-2.9.2:Database.Persist.Class.PersistStore 5d8b5c60b75269f4387c3074bd3766b4
import  -/  persistent-2.9.2:Database.Persist.Sql 63ab64f26f233421350c876aeabffa0b
import  -/  persistent-2.9.2:Database.Persist.Sql.Orphan.PersistStore 59619775bc39b796d33dbc01f00fb70d
import  -/  persistent-2.9.2:Database.Persist.Sql.Run 87b3637665a8801d9fe6e324474bde5b
import  -/  persistent-2.9.2:Database.Persist.Sql.Types e09841be0c3d8e47d2a4a917c4c7bc69
import  -/  persistent-2.9.2:Database.Persist.Sql.Types.Internal 4b75bc4bba7f20d98727326bbb78bb9c
import  -/  Entity a01b127b2a9107e11d1e4d14fc21f8ce
  exports: baf852f4abeb6cc5ff30848df55ad1da
  Duration feae251f5b003166398e47d1846c8199
  DurationLeft 25c6fafac4d6f00252f51a7b230591b6
  DurationUser e59f92f5c1a2c268bd61fc029811f465
  Schedule 0f3935985e606e3fb553ba37da05d772
  ScheduleBegin d2ad6cd8734cd22056c0ef1a9fbee729
  ScheduleTask e0dd9e9a07e0a258e2e6c53fbcd60e70
  Task 7953f0da9b118915e831f4cdcc4de473
  TaskDeadline 3e85e594c7b0e588ab7f0b0e37e9bb0e
  TaskId 61584b4d74eddc97e10c951ec684b41d
  TaskInitial ff3d96aedc384d7eb4f9d8142757aeac
  TaskIsDone 3a7a1a26b01ba3e5ba1bca55197aa335
  TaskIsStarred a1ff71764cd4933f1a70653a09e83934
  TaskKey 0b003ea8d2b6dd265c44106838d77769
  TaskLink a8c80d90c6c39797c1bc1fb8b38b4a9a
  TaskStartable 62cbd41563ae7d71313c4c23b7383a88
  TaskTerminal 1886ce9bd267a7b8ee5e070ef70ea903
  TaskTitle b3ec005cf67022e0c902758f7a5eceb6
  TaskUser 49dbc645d30a9c4b97bd46b142200b4b
  TaskWeight 9f95c45d58c327a7f8e22a03120d2ebc
  User 07f6d5985f695797a989f92d7a4d3778
  UserId 60d4961419ec7b3b5d1ee68d0103c53f
  UserId 19e44d402f8520764262ca5c2182a824
  UserKey 18cd4da8f1b7bc473348b3e75445eb0a
  UserName 1d526c51018e5f434043d3344af78d76
  pgPool c5ca8d34bc021ee9755d6c24d8fac412
import  -/  text-1.2.3.1:Data.Text 0b381763277d88cdfc75e39569eadf1c
import  -/  text-1.2.3.1:Data.Text.Internal f53c34e7fc05c697a08afbad7e0bff24
import  -/  time-1.8.0.2:Data.Time 928e777d2f4e910b49e435e797799a63
import  -/  time-1.8.0.2:Data.Time.Clock.Internal.UTCTime 861e4389489f256886c08017da95536f
43c87fb556deb69e0ffdf972a590d186
  $s$WDurationLeft_$d~~ ::
    Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay
    GHC.Types.~~ Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay
                   @ Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay
                   @~ <Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay>_N) -}
b004a829c60724f17c923dc07eaf405c
  $s$WDurationUser_$d~~ ::
    Database.Persist.Class.PersistEntity.Key Entity.User
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Entity.User
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Entity.User)
                   @ (Database.Persist.Class.PersistEntity.Key Entity.User)
                   @~ <Database.Persist.Class.PersistEntity.Key Entity.User>_N) -}
76d195477bf3d7c3bc604a8c2ff35e36
  $s$WScheduleBegin_$d~~ ::
    Data.Time.Clock.Internal.UTCTime.UTCTime
    GHC.Types.~~ Data.Time.Clock.Internal.UTCTime.UTCTime
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Time.Clock.Internal.UTCTime.UTCTime
                   @ Data.Time.Clock.Internal.UTCTime.UTCTime
                   @~ <Data.Time.Clock.Internal.UTCTime.UTCTime>_N) -}
87c6d3c3ef04cbb82dc58cb0b32f078d
  $s$WScheduleTask_$d~~ ::
    Database.Persist.Class.PersistEntity.Key Entity.Task
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Entity.Task
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   @~ <Database.Persist.Class.PersistEntity.Key Entity.Task>_N) -}
cab5148e6414892ee87319430e4ed3fc
  $s$WTaskDeadline_$d~~ ::
    GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime
    GHC.Types.~~ GHC.Maybe.Maybe
                   Data.Time.Clock.Internal.UTCTime.UTCTime
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   @~ <GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime>_N) -}
bd80ac59aee07965294cb1c322cd9182
  $s$WTaskInitial_$d~~ :: GHC.Types.Int GHC.Types.~~ GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @~ <GHC.Types.Int>_N) -}
dafe58d20502590ca2e3463fb72b58c4
  $s$WTaskIsDone_$d~~ :: GHC.Types.Bool GHC.Types.~~ GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   @~ <GHC.Types.Bool>_N) -}
89dd72e84cf99a04e9f93c753b05ce3f
  $s$WTaskLink_$d~~ ::
    GHC.Maybe.Maybe Data.Text.Internal.Text
    GHC.Types.~~ GHC.Maybe.Maybe Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   @~ <GHC.Maybe.Maybe Data.Text.Internal.Text>_N) -}
4bae68e0f10fb586bf4ae64131fab68d
  $s$WTaskWeight_$d~~ ::
    GHC.Maybe.Maybe GHC.Types.Double
    GHC.Types.~~ GHC.Maybe.Maybe GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Maybe.Maybe GHC.Types.Double)
                   @ (GHC.Maybe.Maybe GHC.Types.Double)
                   @~ <GHC.Maybe.Maybe GHC.Types.Double>_N) -}
1799c4bcffd7ffc46934d02ccf394f96
  $s$WUserName_$d~~ ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
d7a587ae309c43ca9137f65f6e8c5533
  $s$fFromPreprocessjoin2 ::
    Database.Esqueleto.Internal.Internal.SqlQuery
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.PreprocessedFrom
            (Database.Esqueleto.Internal.Internal.SqlExpr
               (Database.Persist.Class.PersistEntity.Entity Entity.User))))
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wfromStart
                   @ Entity.User
                   Entity.$fPersistEntityUser) -}
0ea78b665c9b7d949fda595f9a3303bb
  $s$fFromPreprocessjoin3 ::
    Database.Esqueleto.Internal.Internal.SqlQuery
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.PreprocessedFrom
            (Database.Esqueleto.Internal.Internal.SqlExpr
               (Database.Persist.Class.PersistEntity.Entity Entity.Task))))
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wfromStart
                   @ Entity.Task
                   Entity.$fPersistEntityTask) -}
afefa0bf5bd7389b1031145755310bd4
  $s$fPersistFieldMaybe1 ::
    Database.Persist.Class.PersistField.PersistField
      (GHC.Maybe.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Maybe.Maybe GHC.Types.Int)
                  (\ (ds :: GHC.Maybe.Maybe GHC.Types.Int) ->
                   case ds of wild {
                     GHC.Maybe.Nothing -> Database.Persist.Types.Base.PersistNull
                     GHC.Maybe.Just a1
                     -> Database.Persist.Class.PersistField.$fPersistFieldInt_$ctoPersistValue
                          a1 })
                  (\ (ds :: Database.Persist.Types.Base.PersistValue) ->
                   case ds of wild {
                     DEFAULT
                     -> Data.Either.Left
                          @ Data.Text.Internal.Text
                          @ (GHC.Maybe.Maybe GHC.Types.Int)
                          (Database.Persist.Class.PersistField.fromPersistValueError
                             Database.Persist.Class.PersistField.$fPersistFieldInt3
                             Database.Persist.Class.PersistField.$fPersistFieldInt1
                             wild)
                     Database.Persist.Types.Base.PersistInt64 i
                     -> Data.Either.Right
                          @ Data.Text.Internal.Text
                          @ (GHC.Maybe.Maybe GHC.Types.Int)
                          (GHC.Maybe.Just
                             @ GHC.Types.Int
                             (case i of wild1 { GHC.Int.I64# x# -> GHC.Types.I# x# }))
                     Database.Persist.Types.Base.PersistDouble i
                     -> Data.Either.Right
                          @ Data.Text.Internal.Text
                          @ (GHC.Maybe.Maybe GHC.Types.Int)
                          (GHC.Maybe.Just
                             @ GHC.Types.Int
                             (GHC.Float.RealFracMethods.double2Int i))
                     Database.Persist.Types.Base.PersistNull
                     -> Database.Persist.Class.PersistField.$fPersistFieldMaybe1
                          @ GHC.Types.Int }) -}
035e54f0c617128e19af56b5e2c9efc8
  $s$fPersistFieldMaybe_$ctoPersistValue1 ::
    GHC.Maybe.Maybe GHC.Types.Int
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Maybe.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Maybe.Nothing -> Database.Persist.Types.Base.PersistNull
                   GHC.Maybe.Just a1
                   -> Database.Persist.Class.PersistField.$fPersistFieldInt_$ctoPersistValue
                        a1 }) -}
588ecc2eec51917c3ed2c376daf86006
  $s$fSqlSelect(,)(,) ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)),
       Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)))
      (Database.Esqueleto.Internal.Internal.Value
         (GHC.Maybe.Maybe GHC.Types.Int),
       Database.Esqueleto.Internal.Internal.Value
         (GHC.Maybe.Maybe GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int)),
                     Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int)))
                  @ (Database.Esqueleto.Internal.Internal.Value
                       (GHC.Maybe.Maybe GHC.Types.Int),
                     Database.Esqueleto.Internal.Internal.Value
                       (GHC.Maybe.Maybe GHC.Types.Int))
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)),
                                Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                   GHC.Types.I# 2#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectProcessRow
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue)
                  (GHC.Prim.raise#
                     @ GHC.Exception.Type.SomeException
                     @ 'GHC.Types.LiftedRep
                     @ (Database.Esqueleto.Internal.Internal.IdentInfo
                        -> (Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Esqueleto.Internal.Internal.Value
                                 (GHC.Maybe.Maybe GHC.Types.Int)),
                            Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Esqueleto.Internal.Internal.Value
                                 (GHC.Maybe.Maybe GHC.Types.Int)))
                        -> (Data.Text.Internal.Builder.Builder,
                            [Database.Persist.Types.Base.PersistValue]))
                     (Database.Esqueleto.Internal.Internal.$fExceptionEsqueletoError_$ctoException
                        Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)1)) -}
8924dcb0d68fd0dd4fa07abffecdd92a
  $s$fSqlSelect(,)(,)1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task),
       Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text))
      (Database.Persist.Class.PersistEntity.Entity Entity.Task,
       Database.Esqueleto.Internal.Internal.Value Data.Text.Internal.Text)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                     Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Task,
                     Database.Esqueleto.Internal.Internal.Value Data.Text.Internal.Text)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                     @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             Data.Text.Internal.Text))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text)
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     Data.Text.Internal.Text))) ->
                   case Entity.$fPersistEntityTask76 of ww { Database.Persist.Types.Base.EntityDef ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                   case ww3 of ww11 { Database.Persist.Types.Base.FieldDef ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                   case GHC.List.$wlenAcc
                          @ Database.Persist.Types.Base.FieldDef
                          ww5
                          0# of ww19 { DEFAULT ->
                   case ww18 of wild2 {
                     DEFAULT -> GHC.Types.I# (GHC.Prim.+# 2# ww19)
                     Database.Persist.Types.Base.CompositeRef c1
                     -> GHC.Types.I# (GHC.Prim.+# ww19 1#) } } } })
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectProcessRow
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                     @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             Data.Text.Internal.Text))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text)
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1)
                  (GHC.Prim.raise#
                     @ GHC.Exception.Type.SomeException
                     @ 'GHC.Types.LiftedRep
                     @ (Database.Esqueleto.Internal.Internal.IdentInfo
                        -> (Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                            Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Esqueleto.Internal.Internal.Value
                                 Data.Text.Internal.Text))
                        -> (Data.Text.Internal.Builder.Builder,
                            [Database.Persist.Types.Base.PersistValue]))
                     (Database.Esqueleto.Internal.Internal.$fExceptionEsqueletoError_$ctoException
                        Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)1)) -}
bea3c3946f0babb0a3263ec068ffd12a
  $s$fSqlSelect(,)(,)_$csqlSelectColCount1 ::
    Data.Proxy.Proxy
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)),
       Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)))
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (eta :: Data.Proxy.Proxy
                             (Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe GHC.Types.Int)),
                              Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                 GHC.Types.I# 2#) -}
fc4b6a87c6528513194848caaccf3983
  $s$fSqlSelect(,)(,)_$csqlSelectCols ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> (Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Persist.Class.PersistEntity.Entity Entity.Task),
        Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text))
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2, Strictness: <L,U><S,1*U(U,U)>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w3 :: (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                           Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                Data.Text.Internal.Text))) ->
                 case w3 of ww { (,) ww1 ww2 ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                        @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                Data.Text.Internal.Text))
                        @ (Database.Esqueleto.Internal.Internal.Value
                             Data.Text.Internal.Text)
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1
                        w2
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
5df406178db8b288785476478e473042
  $s$fSqlSelect(,)(,)_$csqlSelectCols1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> (Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int)),
        Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int)))
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2, Strictness: <L,U><S,1*U(U,U)>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w3 :: (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)),
                           Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                 case w3 of ww { (,) ww1 ww2 ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)))
                        @ (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int))
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)))
                        @ (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int))
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                        w2
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
c5f7255eb513c04d8673f1e26a3bd6b0
  $s$fSqlSelect(,)(,)_$csqlSelectProcessRow ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Entity Entity.Task,
          Database.Esqueleto.Internal.Internal.Value Data.Text.Internal.Text)
  {- Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                   @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value
                           Data.Text.Internal.Text))
                   @ (Database.Esqueleto.Internal.Internal.Value
                        Data.Text.Internal.Text)
                   (\ (x3 :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Entity.Task)))[OneShot] ->
                    case Entity.$fPersistEntityTask76 of ww { Database.Persist.Types.Base.EntityDef ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                    case ww3 of ww11 { Database.Persist.Types.Base.FieldDef ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                    case GHC.List.$wlenAcc
                           @ Database.Persist.Types.Base.FieldDef
                           ww5
                           0# of ww19 { DEFAULT ->
                    case ww18 of wild2 {
                      DEFAULT -> GHC.Types.I# (GHC.Prim.+# ww19 1#)
                      Database.Persist.Types.Base.CompositeRef c1
                      -> GHC.Types.I# ww19 } } } })
                   (\ (w2 :: [Database.Persist.Types.Base.PersistValue]) ->
                    case Entity.$fPersistEntityTask76 of ww { Database.Persist.Types.Base.EntityDef ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                    case ww3 of ww11 { Database.Persist.Types.Base.FieldDef ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                    Database.Persist.Sql.Util.$wparseEntityValues
                      @ Entity.Task
                      Entity.$fPersistEntityTask
                      ww18
                      ww5
                      w2 } })
                   Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1) -}
a10ddc6ae06ac3aeb576887c506ffbf4
  $s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task))
      (Database.Persist.Class.PersistEntity.Entity Entity.Task)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.Task
                     Entity.$fPersistEntityTask)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.Task
                     Entity.$fPersistEntityTask)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.Task
                     Entity.$fPersistEntityTask)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.Task
                     Entity.$fPersistEntityTask) -}
635c3e13794cb105b3ecabdd61bdcb79
  $s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)))
      (Database.Esqueleto.Internal.Internal.Value
         (GHC.Maybe.Maybe GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int)))
                  @ (Database.Esqueleto.Internal.Internal.Value
                       (GHC.Maybe.Maybe GHC.Types.Int))
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ (GHC.Maybe.Maybe GHC.Types.Int))
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ (GHC.Maybe.Maybe GHC.Types.Int)
                     Query.$s$fPersistFieldMaybe1)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto
                     @ (GHC.Maybe.Maybe GHC.Types.Int)
                     Query.$s$fPersistFieldMaybe1) -}
59e6b92d8cbc68230a2bf4b0814f40d4
  $s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text))
      (Database.Esqueleto.Internal.Internal.Value
         Data.Text.Internal.Text)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text))
                  @ (Database.Esqueleto.Internal.Internal.Value
                       Data.Text.Internal.Text)
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ Data.Text.Internal.Text)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     Data.Text.Internal.Text))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ Data.Text.Internal.Text
                     Database.Persist.Class.PersistField.$fPersistFieldText0)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto
                     @ Data.Text.Internal.Text
                     Database.Persist.Class.PersistField.$fPersistFieldText0) -}
8722d3093cb198c6cfc87bd3a10372df
  $s$fSqlSelectSqlExprEntity ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Duration))
      (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Duration))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration) -}
c9eb99dc0c5176d377dd576f8aadeea6
  $s$fSqlSelectSqlExprEntity1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.User))
      (Database.Persist.Class.PersistEntity.Entity Entity.User)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.User))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.User)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.User
                     Entity.$fPersistEntityUser)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.User
                     Entity.$fPersistEntityUser)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.User
                     Entity.$fPersistEntityUser)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.User
                     Entity.$fPersistEntityUser) -}
04cf99b6813dd0997b3cc60192a55ede
  $s$fSqlSelectSqlExprEntity2 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Schedule))
      (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Schedule))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.Schedule
                     Entity.$fPersistEntitySchedule)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.Schedule
                     Entity.$fPersistEntitySchedule)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.Schedule
                     Entity.$fPersistEntitySchedule)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.Schedule
                     Entity.$fPersistEntitySchedule) -}
7d4e26bb0d50152641e47cf7da65c235
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
5b8c1814f91ef820f623c4a62707b2a6
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.User)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.User)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
c6b92bc23c917966bcd8c61fb853610b
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto2 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
16155e0d6133a5b73d5978f5b148b713
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto3 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
5c970614bcbf538170a424e610477d35
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.Duration)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.Duration
                        Entity.$fPersistEntityDuration
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
120415e1ecf2d97127369e3f88d66747
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.User)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.User)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.User
                        Entity.$fPersistEntityUser
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
4387518d0ce3a444faac4d244caf7e85
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols2 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.Task
                        Entity.$fPersistEntityTask
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
cb6d07182b865ac011af7c9d2da168e0
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols3 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.Schedule
                        Entity.$fPersistEntitySchedule
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
f4db875d5ad1e6ecf25b3409b87c0c71
  $s$fSqlSelectSqlExprValue ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
      (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                  @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ GHC.Types.Int)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ GHC.Types.Int
                     Database.Persist.Class.PersistField.$fPersistFieldInt)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto
                     @ GHC.Types.Int
                     Database.Persist.Class.PersistField.$fPersistFieldInt) -}
736844842740bf6c1d3d6a104661b069
  $s$fSqlSelectSqlExprValue1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool))
      (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool))
                  @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ GHC.Types.Bool)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ GHC.Types.Bool
                     Database.Persist.Class.PersistField.$fPersistFieldBool)
                  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$s$csqlInsertInto -}
9a4a8f8e452ade59faa9ccf58dc1f0c8
  $s$fSqlSelectSqlExprValue_$csqlInsertInto1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value
                              Data.Text.Internal.Text)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
7adeabd34be2ca0c5fd1879400a69f45
  $s$fSqlSelectSqlExprValue_$csqlInsertInto2 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
5f7747c49566ab8072c4fa56710ad865
  $s$fSqlSelectSqlExprValue_$csqlSelectProcessRow1 ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: [Database.Persist.Types.Base.PersistValue]) ->
                 Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow1
                   @ Data.Text.Internal.Text
                   Database.Persist.Types.Base.fromPersistValueText
                   w1) -}
e15860c0c9acc7f74c733cefa46ab5c5
  $s$fSqlSelectSqlExprValue_$csqlSelectProcessRow2 ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: [Database.Persist.Types.Base.PersistValue]) ->
                 Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow1
                   @ GHC.Types.Int
                   Database.Persist.Class.PersistField.$fPersistFieldInt_$cfromPersistValue
                   w1) -}
c6296c1b11d5a273f59cd7dcc81876f6
  $s$fSqlSelectSqlExprValue_$csqlSelectProcessRow3 ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: [Database.Persist.Types.Base.PersistValue]) ->
                 Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow1
                   @ GHC.Types.Bool
                   Database.Persist.Class.PersistField.$fPersistFieldBool_$cfromPersistValue
                   w1) -}
7088b254927a81a19a450110e8ba34c0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Query.$trModule3 Query.$trModule1) -}
112b8d795278317daade2ccf98ff28e5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Query.$trModule2) -}
fb792f190bc8f80f4f07778066bfd2ef
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Query"#) -}
267e8d4ebf7596da3418d2cf1cb65370
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Query.$trModule4) -}
caadaea1064d454926a5fe396376c15c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("server-0.1.0.0-BXb93lA8dnX9nt10x8YmVX"#) -}
497b624082340bf5c7668e1b312dd10c
  $w$dFrom ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> (# (Database.Esqueleto.Internal.Internal.SqlExpr
             (Database.Persist.Class.PersistEntity.Entity Entity.Task),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2],
     Unfolding: (\ (w :: Database.Esqueleto.Internal.Internal.IdentState) ->
                 let {
                   ds1 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                   (Database.Esqueleto.Internal.Internal.SqlExpr
                                      (Database.Persist.Class.PersistEntity.Entity Entity.Task))),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = Query.$s$fFromPreprocessjoin3
                       `cast`
                     (Database.Esqueleto.Internal.Internal.N:SqlQuery[0] <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                            (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Persist.Class.PersistEntity.Entity
                                                                                     Entity.Task)))>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                              <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                              <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                 Database.Esqueleto.Internal.Internal.IdentState
                                                                                                                 Data.Functor.Identity.Identity>_R
                                                                                                              <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                 (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                                                                    (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                       (Database.Persist.Class.PersistEntity.Entity
                                                                                                                          Entity.Task)))>_N ; Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                                                  <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                                                                  <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                      (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                                                                                                         (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                            (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                               Entity.Task))),
                                                                                                                                                    Database.Esqueleto.Internal.Internal.SideData)>_N))
                       w
                 } in
                 let {
                   ds2 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                       (Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Task))),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 ->
                     case a2 of wild2 { Database.Esqueleto.Internal.Internal.EPreprocessedFrom a4 co ret from_1 ->
                     ((ret,
                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                         (Database.Esqueleto.Internal.Internal.SideData
                            Database.Esqueleto.Internal.Internal.DistinctAll
                            (GHC.Types.:
                               @ Database.Esqueleto.Internal.Internal.FromClause
                               from_1
                               (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.FromClause))
                            (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SetClause)
                            Database.Esqueleto.Internal.Internal.NoWhere
                            (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SomeValue)
                              `cast`
                            (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                            Database.Esqueleto.Internal.Internal.NoWhere
                            (GHC.Types.[]
                               @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                    Database.Esqueleto.Internal.Internal.OrderBy))
                            Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                            (GHC.Maybe.Nothing
                               @ Database.Esqueleto.Internal.Internal.LockingKind)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                         Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty),
                      s')
                       `cast`
                     (Sym (Data.Functor.Identity.N:Identity[0]
                               ((,)
                                  ((,)
                                     (Sub (Nth:0 co))
                                     <Database.Esqueleto.Internal.Internal.SideData>_R)_R
                                  <Database.Esqueleto.Internal.Internal.IdentState>_R)_R)) } } }
                 } in
                 (# (case ds2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) b1 w' -> b1 } },
                     case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                       (Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Task))),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 ->
                     case ds2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild2 { (,) a3 s'1 ->
                     case a3 of wild3 { (,) b1 w' ->
                     Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                       w3
                       w' } } } }),
                    case ds2
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                 Database.Esqueleto.Internal.Internal.SideData),
                                Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                    s' } #)) -}
2c0a9f4e02f1f8657f4a28325e37e7e7
  $w$dFrom1 ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> (# (Database.Esqueleto.Internal.Internal.SqlExpr
             (Database.Persist.Class.PersistEntity.Entity Entity.Schedule),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2],
     Unfolding: (\ (w :: Database.Esqueleto.Internal.Internal.IdentState) ->
                 let {
                   ds1 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                   (Database.Esqueleto.Internal.Internal.SqlExpr
                                      (Database.Persist.Class.PersistEntity.Entity
                                         Entity.Schedule))),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = Query.getSchedulesByTaskId4
                       `cast`
                     (Database.Esqueleto.Internal.Internal.N:SqlQuery[0] <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                            (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Persist.Class.PersistEntity.Entity
                                                                                     Entity.Schedule)))>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                  <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                  <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                     Database.Esqueleto.Internal.Internal.IdentState
                                                                                                                     Data.Functor.Identity.Identity>_R
                                                                                                                  <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                     (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                                                                        (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                           (Database.Persist.Class.PersistEntity.Entity
                                                                                                                              Entity.Schedule)))>_N ; Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                                                          <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                                                          <Data.Functor.Identity.Identity>_R
                                                                                                                                                          <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                              (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                                                                                                                 (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                    (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                       Entity.Schedule))),
                                                                                                                                                            Database.Esqueleto.Internal.Internal.SideData)>_N))
                       w
                 } in
                 let {
                   ds2 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Persist.Class.PersistEntity.Entity Entity.Schedule),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                       (Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Schedule))),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 ->
                     case a2 of wild2 { Database.Esqueleto.Internal.Internal.EPreprocessedFrom a4 co ret from_1 ->
                     ((ret,
                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                         (Database.Esqueleto.Internal.Internal.SideData
                            Database.Esqueleto.Internal.Internal.DistinctAll
                            (GHC.Types.:
                               @ Database.Esqueleto.Internal.Internal.FromClause
                               from_1
                               (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.FromClause))
                            (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SetClause)
                            Database.Esqueleto.Internal.Internal.NoWhere
                            (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SomeValue)
                              `cast`
                            (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                            Database.Esqueleto.Internal.Internal.NoWhere
                            (GHC.Types.[]
                               @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                    Database.Esqueleto.Internal.Internal.OrderBy))
                            Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                            (GHC.Maybe.Nothing
                               @ Database.Esqueleto.Internal.Internal.LockingKind)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                         Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty),
                      s')
                       `cast`
                     (Sym (Data.Functor.Identity.N:Identity[0]
                               ((,)
                                  ((,)
                                     (Sub (Nth:0 co))
                                     <Database.Esqueleto.Internal.Internal.SideData>_R)_R
                                  <Database.Esqueleto.Internal.Internal.IdentState>_R)_R)) } } }
                 } in
                 (# (case ds2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Schedule),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) b1 w' -> b1 } },
                     case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                       (Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Schedule))),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 ->
                     case ds2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Schedule),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild2 { (,) a3 s'1 ->
                     case a3 of wild3 { (,) b1 w' ->
                     Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                       w3
                       w' } } } }),
                    case ds2
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Schedule),
                                 Database.Esqueleto.Internal.Internal.SideData),
                                Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                    s' } #)) -}
b7b57e3150bc5958d8f0a8289737e807
  $wdelSchedulesByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
aa0c9ccad9b4a6fda44a8dc1b15d343d
  $wgetAfterMeByTaskId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,U><S,U>,
     Inline: [2] -}
6472e686fa8a1615e452ce073304aec0
  $wgetBeforeMeByTaskId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,U><S,U>,
     Inline: [2] -}
3d5b64e0dcffd4751399c5aa9ea75d0e
  $wgetBudTasksByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
3984880b48b2160de61003315c4cf3f3
  $wgetDoneTasksByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
de336c82931a4e077b0f6be67eeed6ec
  $wgetDurationsByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Duration] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
17c28ad9ce401642c20e352fcf7d2f0f
  $wgetMeByTaskId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Persist.Class.PersistEntity.Entity Entity.Task]
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ [Database.Persist.Class.PersistEntity.Entity Entity.Task]
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (let {
                         x3 :: Database.Persist.Types.Base.PersistValue
                         = Database.Persist.Types.Base.PersistInt64
                             w `cast`
                             (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                       } in
                       let {
                         x4 :: [Database.Persist.Types.Base.PersistValue]
                         = GHC.Types.:
                             @ Database.Persist.Types.Base.PersistValue
                             x3
                             (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                       } in
                       let {
                         x5 :: (Data.Text.Internal.Builder.Builder,
                                [Database.Persist.Types.Base.PersistValue])
                         = (Database.Esqueleto.Internal.Internal.exists5
                              `cast`
                            ((forall (s :: <*>_N).
                              <Data.Text.Internal.Builder.Buffer s
                               -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                              ->_R <Data.Text.Internal.Builder.Buffer s>_R
                              ->_R Sym (GHC.ST.N:ST[0]
                                            <s>_N
                                            <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                            x4)
                       } in
                       let {
                         lvl36 :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                           {- Arity: 1, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                          x5) -}
                         = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                       } in
                       let {
                         lvl37 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.Value
                                       (Database.Persist.Class.PersistEntity.Key Entity.Task))
                         = Database.Esqueleto.Internal.Internal.ERaw
                             @ (Database.Esqueleto.Internal.Internal.Value
                                  (Database.Persist.Class.PersistEntity.Key Entity.Task))
                             @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                             @~ <Database.Esqueleto.Internal.Internal.Value
                                   (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                             Database.Esqueleto.Internal.Internal.Never
                             lvl36
                       } in
                       Database.Esqueleto.Internal.Internal.select
                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                         @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                         @ GHC.Types.IO
                         Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                         Control.Monad.IO.Class.$fMonadIOIO
                         (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentState) ->
                          let {
                            ds1 :: Data.Functor.Identity.Identity
                                     ((Database.Esqueleto.Internal.Internal.SqlExpr
                                         (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                       Database.Esqueleto.Internal.Internal.SideData),
                                      Database.Esqueleto.Internal.Internal.IdentState)
                            = case Query.$w$dFrom w2 of ww5 { (#,#) ww6 ww7 ->
                              (ww6, ww7)
                                `cast`
                              (Sym (Data.Functor.Identity.N:Identity[0]
                                        <((Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task),
                                           Database.Esqueleto.Internal.Internal.SideData),
                                          Database.Esqueleto.Internal.Internal.IdentState)>_R)) }
                          } in
                          let {
                            task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                      (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                            = case ds1
                                     `cast`
                                   (Data.Functor.Identity.N:Identity[0]
                                        <((Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task),
                                           Database.Esqueleto.Internal.Internal.SideData),
                                          Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                              case a1 of wild1 { (,) a2 w3 -> a2 } }
                          } in
                          ((task,
                            case ds1
                                   `cast`
                                 (Data.Functor.Identity.N:Identity[0]
                                      <((Database.Esqueleto.Internal.Internal.SqlExpr
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Entity.Task),
                                         Database.Esqueleto.Internal.Internal.SideData),
                                        Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                            case a1 of wild1 { (,) a2 w3 ->
                            Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                              w3
                              (Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                 (Database.Esqueleto.Internal.Internal.SideData
                                    Database.Esqueleto.Internal.Internal.DistinctAll
                                    (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.FromClause)
                                    (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SetClause)
                                    (Database.Esqueleto.Internal.Internal.Where
                                       (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                                          @ GHC.Types.Bool
                                          Database.Esqueleto.Internal.Internal.==.2
                                            `cast`
                                          ((forall (s :: <*>_N).
                                            <Data.Text.Internal.Builder.Buffer s
                                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                            ->_R Sym (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                          Database.Esqueleto.Internal.Internal.&&.1
                                            `cast`
                                          ((forall (s :: <*>_N).
                                            <Data.Text.Internal.Builder.Buffer s
                                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                            ->_R Sym (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                          (Database.Esqueleto.Internal.Internal.$w^.
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ Entity.Task
                                             Entity.$fPersistEntityTask_$centityDef
                                             Entity.$fPersistEntityTask_$cpersistFieldDef
                                             task
                                             Query.getMeByTaskId2
                                               `cast`
                                             (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                         Entity.Task>_N))
                                          lvl37))
                                    (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SomeValue)
                                      `cast`
                                    (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                    Database.Esqueleto.Internal.Internal.NoWhere
                                    (GHC.Types.[]
                                       @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                            Database.Esqueleto.Internal.Internal.OrderBy))
                                    Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                    (GHC.Maybe.Nothing
                                       @ Database.Esqueleto.Internal.Internal.LockingKind)
                                      `cast`
                                    (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                 Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty) } }),
                           case ds1
                                  `cast`
                                (Data.Functor.Identity.N:Identity[0]
                                     <((Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                        Database.Esqueleto.Internal.Internal.SideData),
                                       Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                           s' })
                            `cast`
                          (Sym (Data.Functor.Identity.N:Identity[0]
                                    <((Database.Esqueleto.Internal.Internal.SqlExpr
                                         (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                       Database.Esqueleto.Internal.Internal.SideData),
                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)))
                           `cast`
                         (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                   <Database.Esqueleto.Internal.Internal.IdentState>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <(Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                     Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                    <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                    <Control.Monad.Trans.State.Lazy.State
                                                                                                       Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                    <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                       (Database.Persist.Class.PersistEntity.Entity
                                                                                                          Entity.Task)>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                         (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                            Entity.Task)>_N))
                         @ Database.Persist.Sql.Types.Internal.SqlBackend
                         Query.getAllTrunkNode4)
                      x)
                   w1) -}
107524269dc1fc695cd56441b42f1869
  $wgetSchedulesByTaskId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Schedule] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Persist.Class.PersistEntity.Entity Entity.Schedule]
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ [Database.Persist.Class.PersistEntity.Entity Entity.Schedule]
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (let {
                         x3 :: Database.Persist.Types.Base.PersistValue
                         = Database.Persist.Types.Base.PersistInt64
                             w `cast`
                             (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                       } in
                       let {
                         x4 :: [Database.Persist.Types.Base.PersistValue]
                         = GHC.Types.:
                             @ Database.Persist.Types.Base.PersistValue
                             x3
                             (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                       } in
                       let {
                         x5 :: (Data.Text.Internal.Builder.Builder,
                                [Database.Persist.Types.Base.PersistValue])
                         = (Database.Esqueleto.Internal.Internal.exists5
                              `cast`
                            ((forall (s :: <*>_N).
                              <Data.Text.Internal.Builder.Buffer s
                               -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                              ->_R <Data.Text.Internal.Builder.Buffer s>_R
                              ->_R Sym (GHC.ST.N:ST[0]
                                            <s>_N
                                            <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                            x4)
                       } in
                       let {
                         lvl36 :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                           {- Arity: 1, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                          x5) -}
                         = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                       } in
                       let {
                         lvl37 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.Value
                                       (Database.Persist.Class.PersistEntity.Key Entity.Task))
                         = Database.Esqueleto.Internal.Internal.ERaw
                             @ (Database.Esqueleto.Internal.Internal.Value
                                  (Database.Persist.Class.PersistEntity.Key Entity.Task))
                             @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                             @~ <Database.Esqueleto.Internal.Internal.Value
                                   (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                             Database.Esqueleto.Internal.Internal.Never
                             lvl36
                       } in
                       Database.Esqueleto.Internal.Internal.select
                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Persist.Class.PersistEntity.Entity Entity.Schedule))
                         @ (Database.Persist.Class.PersistEntity.Entity Entity.Schedule)
                         @ GHC.Types.IO
                         Query.$s$fSqlSelectSqlExprEntity2
                         Control.Monad.IO.Class.$fMonadIOIO
                         (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentState) ->
                          let {
                            ds1 :: Data.Functor.Identity.Identity
                                     ((Database.Esqueleto.Internal.Internal.SqlExpr
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Entity.Schedule),
                                       Database.Esqueleto.Internal.Internal.SideData),
                                      Database.Esqueleto.Internal.Internal.IdentState)
                            = case Query.$w$dFrom1 w2 of ww5 { (#,#) ww6 ww7 ->
                              (ww6, ww7)
                                `cast`
                              (Sym (Data.Functor.Identity.N:Identity[0]
                                        <((Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Schedule),
                                           Database.Esqueleto.Internal.Internal.SideData),
                                          Database.Esqueleto.Internal.Internal.IdentState)>_R)) }
                          } in
                          let {
                            schedule :: Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Schedule)
                            = case ds1
                                     `cast`
                                   (Data.Functor.Identity.N:Identity[0]
                                        <((Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Schedule),
                                           Database.Esqueleto.Internal.Internal.SideData),
                                          Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                              case a1 of wild1 { (,) a2 w3 -> a2 } }
                          } in
                          ((schedule,
                            case ds1
                                   `cast`
                                 (Data.Functor.Identity.N:Identity[0]
                                      <((Database.Esqueleto.Internal.Internal.SqlExpr
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Entity.Schedule),
                                         Database.Esqueleto.Internal.Internal.SideData),
                                        Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                            case a1 of wild1 { (,) a2 w3 ->
                            Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                              w3
                              (Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                 (Database.Esqueleto.Internal.Internal.SideData
                                    Database.Esqueleto.Internal.Internal.DistinctAll
                                    (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.FromClause)
                                    (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SetClause)
                                    (Database.Esqueleto.Internal.Internal.Where
                                       (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                                          @ GHC.Types.Bool
                                          Database.Esqueleto.Internal.Internal.==.2
                                            `cast`
                                          ((forall (s :: <*>_N).
                                            <Data.Text.Internal.Builder.Buffer s
                                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                            ->_R Sym (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                          Database.Esqueleto.Internal.Internal.&&.1
                                            `cast`
                                          ((forall (s :: <*>_N).
                                            <Data.Text.Internal.Builder.Buffer s
                                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                            ->_R Sym (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                          (Database.Esqueleto.Internal.Internal.$w^.
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ Entity.Schedule
                                             Entity.$fPersistEntitySchedule_$centityDef
                                             Entity.$fPersistEntitySchedule_$cpersistFieldDef
                                             schedule
                                             Query.getSchedulesByTaskId3
                                               `cast`
                                             (Sym (Entity.D:R:EntityFieldScheduletyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                             Entity.Task>_N))
                                          lvl37))
                                    (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SomeValue)
                                      `cast`
                                    (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                    Database.Esqueleto.Internal.Internal.NoWhere
                                    (GHC.Types.[]
                                       @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                            Database.Esqueleto.Internal.Internal.OrderBy))
                                    Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                    (GHC.Maybe.Nothing
                                       @ Database.Esqueleto.Internal.Internal.LockingKind)
                                      `cast`
                                    (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                 (Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.:
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy)
                                          (Database.Esqueleto.Internal.Internal.EOrderBy
                                             @ Database.Esqueleto.Internal.Internal.OrderBy
                                             @ Data.Time.Clock.Internal.UTCTime.UTCTime
                                             @~ <Database.Esqueleto.Internal.Internal.OrderBy>_N
                                             Database.Esqueleto.Internal.Internal.ASC
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ Data.Time.Clock.Internal.UTCTime.UTCTime
                                                @ Entity.Schedule
                                                Entity.$fPersistEntitySchedule_$centityDef
                                                Entity.$fPersistEntitySchedule_$cpersistFieldDef
                                                schedule
                                                Query.getSchedulesByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldScheduletyp0[0]) <Data.Time.Clock.Internal.UTCTime.UTCTime>_N)))
                                          (GHC.Types.[]
                                             @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                  Database.Esqueleto.Internal.Internal.OrderBy)))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty)) } }),
                           case ds1
                                  `cast`
                                (Data.Functor.Identity.N:Identity[0]
                                     <((Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Schedule),
                                        Database.Esqueleto.Internal.Internal.SideData),
                                       Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                           s' })
                            `cast`
                          (Sym (Data.Functor.Identity.N:Identity[0]
                                    <((Database.Esqueleto.Internal.Internal.SqlExpr
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Entity.Schedule),
                                       Database.Esqueleto.Internal.Internal.SideData),
                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)))
                           `cast`
                         (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                   <Database.Esqueleto.Internal.Internal.IdentState>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <(Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity
                                          Entity.Schedule),
                                     Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                    <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                    <Control.Monad.Trans.State.Lazy.State
                                                                                                       Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                    <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                       (Database.Persist.Class.PersistEntity.Entity
                                                                                                          Entity.Schedule)>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                             (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                Entity.Schedule)>_N))
                         @ Database.Persist.Sql.Types.Internal.SqlBackend
                         Query.getAllTrunkNode4)
                      x)
                   w1) -}
838a549e8d59210fd21ab49ddfe08df0
  $wgetTaskAssignById ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
29dc4d10dc6d1f3cd6ef278ca2e2c4b2
  $wgetTaskAssignByTaskId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,U><S,U>,
     Inline: [2] -}
1016860635de2ed18201b92405b42d54
  $wgetTrunkTasksByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
cb8771bdb635c2e92e5fb59b5f8dc4f1
  $wgetUndoneOwnTasksByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
9d3077b2bbbb1652ce2b8c5c1d28f377
  $wgetUndoneTaskAssigns ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
84bcc6a2c7243cb4538feb9940c7f469
  $wgetUndoneTasksByUserId ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
4984bd391ea6f3caf5c3e717d124be6e
  $wgetUserById ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.User] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
732f93bdcb15f789becfd5f033c4eb4d
  $winsSchedules ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> [Entity.Schedule]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: [Entity.Schedule])
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (Query.insSchedules_go w)
                      x)
                   w1) -}
ddb329b70d2f8a3d35aaa9ee5cf6abef
  $wsetStarSwitched ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
2495bbb99f4b7ef06a2af0a5f99eaf30
  $wsetTaskDeadline ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistUTCTime w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                              @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                          Entity.$fPersistEntityTask
                          Query.setTaskDeadline3
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Time.Clock.Internal.UTCTime.UTCTime>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl38 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl37
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl36 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl38))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
a72c9ec9ba5c32cee869eac239af2285
  $wsetTaskDone ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl36
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w2 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case Query.setTaskDone2 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl37))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w2))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w1) -}
7c4f22cee12d00a60bd03bd6d70c6f6b
  $wsetTaskDoneOrUndone ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
c4ad37f52af4e1ccdf63f2fd9c71442c
  $wsetTaskLink ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistText w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Text.Internal.Text))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Text.Internal.Text))
                              @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Text.Internal.Text)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                          Entity.$fPersistEntityTask
                          Query.setTaskLink2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Text.Internal.Text>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl38 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl37
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl36 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl38))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
02eda5e03d27d747fc4c653bbe255f8f
  $wsetTaskStarred ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl36
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w2 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case Query.setTaskStarred2 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl37))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w2))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w1) -}
3cce27f0453a407137cccad817bd7b7c
  $wsetTaskStartable ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistUTCTime w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                              @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                          Entity.$fPersistEntityTask
                          Query.setTaskStartable2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Time.Clock.Internal.UTCTime.UTCTime>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl38 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl37
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl36 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl38))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
f5e80b8ed1777ac2afa1eefcf89190c2
  $wsetTaskTitle ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistText w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Text.Internal.Text))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Text.Internal.Text))
                              @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Text.Internal.Text)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                          Entity.$fPersistEntityTask
                          Query.setTaskTitle2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Text.Internal.Text>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl38 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl37
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl36 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl38))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
0be9fa89c4ee38788532c9a8eec95534
  $wsetTaskUser ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Entity.UserId
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Entity.UserId)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistInt64
                              w1
                                `cast`
                              (Entity.D:R:KeyUser0[0] ; (Entity.N:R:KeyUser[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value Entity.UserId)
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value Entity.UserId)
                              @ Entity.UserId
                              @~ <Database.Esqueleto.Internal.Internal.Value Entity.UserId>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ Entity.UserId
                          Entity.$fPersistEntityTask
                          Query.setTaskUser2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Entity.UserId>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl38 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl37
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl36 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl38))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
2930fc5dc931b14210c70136a2c09907
  $wsetTaskWeight ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Double)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl36 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistDouble w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe GHC.Types.Double))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe GHC.Types.Double))
                              @ (GHC.Maybe.Maybe GHC.Types.Double)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Double)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe GHC.Types.Double)
                          Entity.$fPersistEntityTask
                          Query.setTaskWeight2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      GHC.Types.Double>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl37 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl38 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl37
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl36 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.getMeByTaskId2
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl38))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
76e430d038bfc4fda98ad54518710ba5
  delSchedulesByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.delSchedulesByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
00d7cae0ee2043fa067f5fbb5e3d38cd
  delSchedulesByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wdelSchedulesByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
081e24758bb11fe2b44e981b7bb88f1f
  getAfterMeByTaskId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getAfterMeByTaskId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <Database.Persist.Class.PersistEntity.Key Entity.Task>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
d7ce49dcb0eadbb11d1481a73cab034a
  getAfterMeByTaskId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetAfterMeByTaskId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
a765b7d94482d486902a9c45f5d7ffa2
  getAllTrunkNode ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.IO
         [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getAllTrunkNode1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]>_R)) -}
bc7671ab030c8a1d82c5f5d6d3fdcde9
  getAllTrunkNode1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int] #)
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
                   ww1
                   ww2
                   ww9
                   ww5
                   ww6
                   Query.getAllTrunkNode2
                   w1 } }) -}
0c499b143833d7161f2b9f0a253cb87c
  getAllTrunkNode2 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Types.IO
         [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                 Database.Persist.Sql.Run.$wrunSqlConn
                   @ GHC.Types.IO
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
                   Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                   Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                   @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                   Query.getAllTrunkNode3
                   x) -}
0899d5e106f839f6d974e01b5f72f21e
  getAllTrunkNode3 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      GHC.Types.IO
      [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
  {- Unfolding: (Database.Esqueleto.Internal.Internal.select
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                   @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
                   @ GHC.Types.IO
                   Query.$s$fSqlSelectSqlExprValue
                   Control.Monad.IO.Class.$fMonadIOIO
                   Query.getAllTrunkNode5
                     `cast`
                   (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Database.Esqueleto.Internal.Internal.IdentState>_N
                             <Data.Functor.Identity.Identity>_R
                             <(Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int),
                               Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                              <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                              <Control.Monad.Trans.State.Lazy.State
                                                                                                 Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                              <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                 (Database.Esqueleto.Internal.Internal.Value
                                                                                                    GHC.Types.Int)>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                     (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                        GHC.Types.Int)>_N))
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   Query.getAllTrunkNode4) -}
82bdf19a7d2e0023def3181a29a497e2
  getAllTrunkNode4 ::
    Database.Persist.Sql.Types.Internal.SqlBackendCanRead
      Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: (((GHC.Base.id
                     @ Database.Persist.Sql.Types.Internal.SqlBackend)
                    `cast`
                  (Sym (Database.Persist.Class.PersistStore.N:BackendCompatible[0]
                            <Database.Persist.Sql.Types.Internal.SqlBackend>_N
                            <Database.Persist.Sql.Types.Internal.SqlBackend>_N)),
                  Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend,
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreReadSqlBackend,
                  Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueReadSqlBackend)) -}
9a82d31ae6fe7af5457a8a4b20075406
  getAllTrunkNode5 ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> Data.Functor.Identity.Identity
         ((Database.Esqueleto.Internal.Internal.SqlExpr
             (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState)
  {- Arity: 1, Strictness: <L,U>m -}
b662b53247185aa17e8c250008fea166
  getBeforeMeByTaskId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getBeforeMeByTaskId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <Database.Persist.Class.PersistEntity.Key Entity.Task>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
0d061a70a2a7ae7ba97d549112bb9d2c
  getBeforeMeByTaskId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetBeforeMeByTaskId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
a6c4834f2d02effc434c2808b85713f7
  getBudTasksByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getBudTasksByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
35b69d3840f5d0e8e17b7732f7b92a3a
  getBudTasksByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetBudTasksByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
4e9bc05bc75f650f37389b4490674b40
  getDoneTasksByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getDoneTasksByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
fe8817f9739b747ddd0f6f46b3c410e9
  getDoneTasksByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetDoneTasksByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
302bbb6c401596ae434341f8c95bfbe5
  getDurationsByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Duration]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getDurationsByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Entity.Duration]>_R)) -}
e60ffbca466223f3f94d50f2c657a3ef
  getDurationsByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Duration] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetDurationsByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
61804c057b211c513e69cce1e36e3d4a
  getMaxNode' ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.IO
         [(Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int),
           Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int))]
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getMaxNode'1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int),
                                  Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int))]>_R)) -}
8e907498c42fab16e34dcfb021edd306
  getMaxNode'1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Esqueleto.Internal.Internal.Value
              (GHC.Maybe.Maybe GHC.Types.Int),
            Database.Esqueleto.Internal.Internal.Value
              (GHC.Maybe.Maybe GHC.Types.Int))] #)
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [(Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int),
                       Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int))]
                   ww1
                   ww2
                   ww9
                   ww5
                   ww6
                   Query.getMaxNode'2
                   w1 } }) -}
3cf016e48b9452c5ef2f769ee9e63683
  getMaxNode'2 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Types.IO
         [(Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int),
           Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int))]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                 Database.Persist.Sql.Run.$wrunSqlConn
                   @ GHC.Types.IO
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [(Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int),
                       Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int))]
                   Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                   Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                   @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                   Query.getMaxNode'3
                   x) -}
526ea728479070c822888b820688e4fa
  getMaxNode'3 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      GHC.Types.IO
      [(Database.Esqueleto.Internal.Internal.Value
          (GHC.Maybe.Maybe GHC.Types.Int),
        Database.Esqueleto.Internal.Internal.Value
          (GHC.Maybe.Maybe GHC.Types.Int))]
  {- Unfolding: (Database.Esqueleto.Internal.Internal.select
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value
                           (GHC.Maybe.Maybe GHC.Types.Int)),
                      Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value
                           (GHC.Maybe.Maybe GHC.Types.Int)))
                   @ (Database.Esqueleto.Internal.Internal.Value
                        (GHC.Maybe.Maybe GHC.Types.Int),
                      Database.Esqueleto.Internal.Internal.Value
                        (GHC.Maybe.Maybe GHC.Types.Int))
                   @ GHC.Types.IO
                   Query.$s$fSqlSelect(,)(,)
                   Control.Monad.IO.Class.$fMonadIOIO
                   Query.getMaxNode'4
                     `cast`
                   (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Database.Esqueleto.Internal.Internal.IdentState>_N
                             <Data.Functor.Identity.Identity>_R
                             <((Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)),
                                Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int))),
                               Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                              <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                              <Control.Monad.Trans.State.Lazy.State
                                                                                                 Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                              <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                                     (GHC.Maybe.Maybe
                                                                                                        GHC.Types.Int)),
                                                                                                Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                                     (GHC.Maybe.Maybe
                                                                                                        GHC.Types.Int)))>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                            (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                               (GHC.Maybe.Maybe
                                                                                                                                                                                                  GHC.Types.Int)),
                                                                                                                                                                                          Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                            (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                               (GHC.Maybe.Maybe
                                                                                                                                                                                                  GHC.Types.Int)))>_N))
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   Query.getAllTrunkNode4) -}
3207e8a92b043f674128b26105daf2f4
  getMaxNode'4 ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> Data.Functor.Identity.Identity
         (((Database.Esqueleto.Internal.Internal.SqlExpr
              (Database.Esqueleto.Internal.Internal.Value
                 (GHC.Maybe.Maybe GHC.Types.Int)),
            Database.Esqueleto.Internal.Internal.SqlExpr
              (Database.Esqueleto.Internal.Internal.Value
                 (GHC.Maybe.Maybe GHC.Types.Int))),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentState) ->
                 let {
                   ds1 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = case Query.$w$dFrom w2 of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2)
                       `cast`
                     (Sym (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R)) }
                 } in
                 let {
                   task :: Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                   = case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 -> a2 } }
                 } in
                 (((Database.Esqueleto.Internal.Internal.unsafeSqlFunction
                      @ (Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                      @ (GHC.Maybe.Maybe GHC.Types.Int)
                      (Database.Esqueleto.Internal.Internal.avg_4 @ GHC.Types.Int)
                        `cast`
                      (Sym (Database.Esqueleto.Internal.Internal.N:UnsafeSqlFunctionArgument[0]
                                <Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)>_N))
                      Database.Esqueleto.Internal.Internal.max_2
                        `cast`
                      ((forall (s :: <*>_N).
                        <Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                        ->_R Sym (GHC.ST.N:ST[0]
                                      <s>_N
                                      <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                      (Database.Esqueleto.Internal.Internal.$w^.
                         @ GHC.Types.Int
                         @ Entity.Task
                         Entity.$fPersistEntityTask_$centityDef
                         Entity.$fPersistEntityTask_$cpersistFieldDef
                         task
                         Query.getMaxNode'6
                           `cast`
                         (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Int>_N)),
                    Database.Esqueleto.Internal.Internal.unsafeSqlFunction
                      @ (Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                      @ (GHC.Maybe.Maybe GHC.Types.Int)
                      (Database.Esqueleto.Internal.Internal.avg_4 @ GHC.Types.Int)
                        `cast`
                      (Sym (Database.Esqueleto.Internal.Internal.N:UnsafeSqlFunctionArgument[0]
                                <Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)>_N))
                      Database.Esqueleto.Internal.Internal.max_2
                        `cast`
                      ((forall (s :: <*>_N).
                        <Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                        ->_R Sym (GHC.ST.N:ST[0]
                                      <s>_N
                                      <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                      (Database.Esqueleto.Internal.Internal.$w^.
                         @ GHC.Types.Int
                         @ Entity.Task
                         Entity.$fPersistEntityTask_$centityDef
                         Entity.$fPersistEntityTask_$cpersistFieldDef
                         task
                         Query.getMaxNode'5
                           `cast`
                         (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Int>_N))),
                   case ds1
                          `cast`
                        (Data.Functor.Identity.N:Identity[0]
                             <((Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                Database.Esqueleto.Internal.Internal.SideData),
                               Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                   case a1 of wild1 { (,) a2 w3 ->
                   Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                     w3
                     Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty } }),
                  case ds1
                         `cast`
                       (Data.Functor.Identity.N:Identity[0]
                            <((Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                               Database.Esqueleto.Internal.Internal.SideData),
                              Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                  s' })
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(((Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int)),
                               Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int))),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)>_R))) -}
bad052be5f33d931c45fa2e7e362fb55
  getMaxNode'5 :: Entity.R:EntityFieldTasktyp GHC.Types.Int
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Entity.TaskInitial
                   @ GHC.Types.Int
                   Query.$s$WTaskInitial_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Int>_N <GHC.Types.Int>_N)) -}
d1b17cb25b96e50673d7d9928a7b4e1e
  getMaxNode'6 :: Entity.R:EntityFieldTasktyp GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Entity.TaskTerminal
                   @ GHC.Types.Int
                   Query.$s$WTaskInitial_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Int>_N <GHC.Types.Int>_N)) -}
b9cb0f98109b3f2584456621f939020a
  getMeByTaskId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getMeByTaskId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <Database.Persist.Class.PersistEntity.Key Entity.Task>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
b3606d3c1fcb6030ef532090f1d52b93
  getMeByTaskId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetMeByTaskId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
35a6ac5367d03fd24f669904aa7a1aba
  getMeByTaskId2 ::
    Entity.R:EntityFieldTasktyp
      (Database.Persist.Class.PersistEntity.Key Entity.Task)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Entity.TaskId
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   Query.$s$WScheduleTask_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Entity.Task>_N <Database.Persist.Class.PersistEntity.Key
                                                         Entity.Task>_N)) -}
389a8904d1b756528915707b0c109db9
  getSchedulesByTaskId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Schedule]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getSchedulesByTaskId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <Database.Persist.Class.PersistEntity.Key Entity.Task>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Entity.Schedule]>_R)) -}
3f85266ef2da64cb0323aa3d7dc896e6
  getSchedulesByTaskId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Schedule] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetSchedulesByTaskId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
3b96e9590243b87e2d5026c7ee0619d8
  getSchedulesByTaskId2 ::
    Entity.R:EntityFieldScheduletyp
      Data.Time.Clock.Internal.UTCTime.UTCTime
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Entity.ScheduleBegin
                   @ Data.Time.Clock.Internal.UTCTime.UTCTime
                   Query.$s$WScheduleBegin_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Time.Clock.Internal.UTCTime.UTCTime>_N <Data.Time.Clock.Internal.UTCTime.UTCTime>_N)) -}
8f411e2ed36bfd76e34fccb8ddb78ef0
  getSchedulesByTaskId3 ::
    Entity.R:EntityFieldScheduletyp
      (Database.Persist.Class.PersistEntity.Key Entity.Task)
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Entity.ScheduleTask
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   Query.$s$WScheduleTask_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Entity.Task>_N <Database.Persist.Class.PersistEntity.Key
                                                         Entity.Task>_N)) -}
4bf8a73348271d71a6acdc296e8fc3e2
  getSchedulesByTaskId4 ::
    Database.Esqueleto.Internal.Internal.SqlQuery
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.PreprocessedFrom
            (Database.Esqueleto.Internal.Internal.SqlExpr
               (Database.Persist.Class.PersistEntity.Entity Entity.Schedule))))
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wfromStart
                   @ Entity.Schedule
                   Entity.$fPersistEntitySchedule) -}
3638c4e0d541736d834265c0f5c18c43
  getTaskAssignById ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getTaskAssignById1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
f1fcf79097fb76d41117513733005208
  getTaskAssignById1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetTaskAssignById ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
e5c9f655371f9a84ed32172e1046964f
  getTaskAssignByTaskId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getTaskAssignByTaskId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <Database.Persist.Class.PersistEntity.Key Entity.Task>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
82dc99a3d6d87d88710e1f038ecf8ce7
  getTaskAssignByTaskId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> Database.Persist.Class.PersistEntity.Key Entity.Task
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Entity.Task)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetTaskAssignByTaskId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
b6f2b7bb933e4b1d34d1bc647b230fca
  getTrunkTasksByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getTrunkTasksByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
c6cf32820e4856c96f5498c3086401bd
  getTrunkTasksByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetTrunkTasksByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
5a3e02217575687b5a702bc991204300
  getUndoneOwnTasksByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getUndoneOwnTasksByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
75b6a96168f648199fa4f3018ef4caac
  getUndoneOwnTasksByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetUndoneOwnTasksByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
28fb5951c640b8eb7ab7b3be3c03990a
  getUndoneTaskAssigns ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getUndoneTaskAssigns1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
38297c6500dcbc32b9043abf50a6f22c
  getUndoneTaskAssigns1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetUndoneTaskAssigns ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
1ac6c8da1eba272b4aec70324af0c71a
  getUndoneTasksByUserId ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Task]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getUndoneTasksByUserId1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.Task]>_R)) -}
e3dde83222c81ddf7f4aa5f521d2f113
  getUndoneTasksByUserId1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Task] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetUndoneTasksByUserId ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
32273817823f439e53e69f64c8141d79
  getUserById ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.User]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getUserById1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.User]>_R)) -}
eda156240eda9ce208e6640aba3d873f
  getUserById1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.User] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetUserById ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
4e0de3538cbe3fa0bed900b2ba2ab3ef
  insDur :: Entity.Duration -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.insDur1
                  `cast`
                (<Entity.Duration>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
7ab55f0ebd20cc6d72383589d733defa
  insDur1 ::
    Entity.Duration
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (duration :: Entity.Duration)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Entity.pgPool
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Persist.Sql.Types.ConnectionPool>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww3 { Data.Pool.Pool ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww6 of ww11 { GHC.Types.I# ww12 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww4
                   ww5
                   ww12
                   ww8
                   ww9
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case ((Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                                @ GHC.Types.IO
                                @ Entity.Duration
                                Control.Monad.IO.Class.$fMonadIOIO
                                Query.insDur2
                                  `cast`
                                (GHC.Classes.(%,%)
                                   <Database.Persist.Class.PersistEntity.PersistEntity
                                      Entity.Duration>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Entity.D:R:PersistEntityBackendDuration[0]))
                                      (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                duration)
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <GHC.Types.IO>_R
                                  <Database.Persist.Class.PersistEntity.Key Entity.Duration>_N)
                               r1)
                              `cast`
                            (GHC.Types.N:IO[0]
                                 <Database.Persist.Class.PersistEntity.Key Entity.Duration>_R)
                              s of ds2 { (#,#) ipv2 ipv3 ->
                       (# ipv2, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   ipv } } }) -}
a3b70bbff37a8905ea91e0d799a15407
  insDur2 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Entity.Duration,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Entity.$fPersistEntityDuration,
                  Query.insDur_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
5ca064f4a36a4505edae4f1c0781080c
  insDur_$d~~ ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
dac7429366be86788a61d58414d752a8
  insSchedules ::
    Database.Persist.Sql.Types.ConnectionPool
    -> [Entity.Schedule] -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.insSchedules1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <[Entity.Schedule]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
db5803f664511487e499e3bb96d4961c
  insSchedules1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> [Entity.Schedule]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: [Entity.Schedule])
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$winsSchedules ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
ac1d5e93e7fdf86b99d2b01e0c585344
  insSchedules_go ::
    [Entity.Schedule]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,1*U> -}
cb89af3eb6b7136c42903b41e4ee4f67
  insTasks :: [Entity.Task] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.insTasks1
                  `cast`
                (<[Entity.Task]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
da7b93b35f49d271debf5b638b17e4df
  insTasks1 ::
    [Entity.Task]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (ts :: [Entity.Task])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Entity.pgPool
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Persist.Sql.Types.ConnectionPool>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww3 { Data.Pool.Pool ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww6 of ww11 { GHC.Types.I# ww12 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww4
                   ww5
                   ww12
                   ww8
                   ww9
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (Query.insTasks_go ts)
                      x)
                   ipv } } }) -}
7d055d81baee35905b1e47dc2262950c
  insTasks_go ::
    [Entity.Task]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,1*U> -}
34dd2ba976e2581e456c74f46a5df7c4
  insUser :: Entity.User -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.insUser1
                  `cast`
                (<Entity.User>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8451899d751acceadbe3c57d6a32adc3
  insUser1 ::
    Entity.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (user :: Entity.User)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Entity.pgPool
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Persist.Sql.Types.ConnectionPool>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww3 { Data.Pool.Pool ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww6 of ww11 { GHC.Types.I# ww12 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww4
                   ww5
                   ww12
                   ww8
                   ww9
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case ((Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                                @ GHC.Types.IO
                                @ Entity.User
                                Control.Monad.IO.Class.$fMonadIOIO
                                Query.insUser2
                                  `cast`
                                (GHC.Classes.(%,%)
                                   <Database.Persist.Class.PersistEntity.PersistEntity
                                      Entity.User>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Entity.D:R:PersistEntityBackendUser[0]))
                                      (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                user)
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <GHC.Types.IO>_R
                                  <Database.Persist.Class.PersistEntity.Key Entity.User>_N)
                               r1)
                              `cast`
                            (GHC.Types.N:IO[0]
                                 <Database.Persist.Class.PersistEntity.Key Entity.User>_R)
                              s of ds2 { (#,#) ipv2 ipv3 ->
                       (# ipv2, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   ipv } } }) -}
859ec30d7ec88c8cf37653b9915f3b94
  insUser2 ::
    (Database.Persist.Class.PersistEntity.PersistEntity Entity.User,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Entity.$fPersistEntityUser,
                  Query.insDur_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
3c79d9bf64881c68cdba63d89e6a40b9
  keyFromInt ::
    GHC.Real.Integral a =>
    a
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dIntegral :: GHC.Real.Integral a) (x :: a) ->
                 case GHC.Integer.Type.integerToInt
                        (GHC.Real.toInteger @ a $dIntegral x) of wild { DEFAULT ->
                 (GHC.Int.I64# wild)
                   `cast`
                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])) }) -}
f12294f2472a4f57f1221540ec6d92a1
  setStarSwitched ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setStarSwitched1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
67a5d204055eb104869f5dd5d32fed33
  setStarSwitched1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetStarSwitched ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
87d7490ecf09f5540a2ad1d2c98ffbd8
  setTaskDeadline ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskDeadline1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8aaea1b92bb3b7620df2d72896461273
  setTaskDeadline1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskDeadline ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
6958fefe5c07dcf13b5c52469b7e754f
  setTaskDeadline2 ::
    Database.Persist.Sql.Types.Internal.SqlBackendCanWrite
      Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: ((Query.getAllTrunkNode4,
                  Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryWriteSqlBackend,
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend,
                  Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueWriteSqlBackend)) -}
11abd5c91e1beb03dd5d24d0f54bfb7a
  setTaskDeadline3 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
  {- HasNoCafRefs, Strictness: m9,
     Unfolding: (Entity.TaskDeadline
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   Query.$s$WTaskDeadline_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Time.Clock.Internal.UTCTime.UTCTime>_N <GHC.Maybe.Maybe
                                                                                                            Data.Time.Clock.Internal.UTCTime.UTCTime>_N)) -}
98b86c35fe808fb4405f0bae8bc45093
  setTaskDone ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskDone1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
f9ea7c2b4973b37af144fbc0ed4c2381
  setTaskDone1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskDone ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
92033a784e2b4ec32ff1c3e84b665369
  setTaskDone2 ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Esqueleto.Internal.Internal.Update Entity.Task)
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wsetAux
                   @ Entity.Task
                   @ GHC.Types.Bool
                   Entity.$fPersistEntityTask
                   Query.setTaskDone5
                     `cast`
                   (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Bool>_N)
                   Query.setTaskDone3) -}
8af74aa056ff7f7d1c6a88cace9d921c
  setTaskDone3 ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Persist.Class.PersistEntity.Entity Entity.Task)
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                 Query.setTaskDone_expr) -}
faaff1f30f889d61f4b6e235ce2d80f3
  setTaskDone4 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                 Query.setTaskDone_x5) -}
f857fba0df6d2ae10ce52e1c92f32343
  setTaskDone5 :: Entity.R:EntityFieldTasktyp GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Entity.TaskIsDone
                   @ GHC.Types.Bool
                   Query.$s$WTaskIsDone_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Bool>_N <GHC.Types.Bool>_N)) -}
7fdbcd9eb7e4d1f9d1147e3720749e26
  setTaskDoneOrUndone ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskDoneOrUndone1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
131d1953878a26d5d7fd2d5fa3e13ec6
  setTaskDoneOrUndone1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskDoneOrUndone ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
038de55c7b0b234d9750c183a20d8100
  setTaskDone_expr ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Unfolding: (Database.Esqueleto.Internal.Internal.ERaw
                   @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool>_N
                   Database.Esqueleto.Internal.Internal.Never
                   Query.setTaskDone4) -}
be467e9a84cab0cd21e75834bfacb6cd
  setTaskDone_x3 :: Database.Persist.Types.Base.PersistValue
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Database.Persist.Types.Base.PersistBool
                   GHC.Types.True) -}
dee57ffc2987fd9607e1648b64529aef
  setTaskDone_x4 :: [Database.Persist.Types.Base.PersistValue]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   Query.setTaskDone_x3
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
e215c8d9d007fcdc73c86fc97e9ca3ca
  setTaskDone_x5 ::
    (Data.Text.Internal.Builder.Builder,
     [Database.Persist.Types.Base.PersistValue])
  {- Strictness: m,
     Unfolding: ((Database.Esqueleto.Internal.Internal.exists5
                    `cast`
                  ((forall (s :: <*>_N).
                    <Data.Text.Internal.Builder.Buffer s
                     -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                    ->_R <Data.Text.Internal.Builder.Buffer s>_R
                    ->_R Sym (GHC.ST.N:ST[0]
                                  <s>_N
                                  <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                  Query.setTaskDone_x4)) -}
783319e23e72bc6d4353636730274391
  setTaskLink ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> Data.Text.Internal.Text -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskLink1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
bbb0361878c47191dedba2321c311a8c
  setTaskLink1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Text.Internal.Text)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskLink ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
c93f0775008bbbd0be275bc54927e628
  setTaskLink2 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Entity.TaskLink
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   Query.$s$WTaskLink_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Text.Internal.Text>_N <GHC.Maybe.Maybe
                                                                                           Data.Text.Internal.Text>_N)) -}
0f2c1b97b1dd49f8d1f441f9539daad9
  setTaskStarred ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskStarred1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
7c262f984ab93f10098e64f4196b1ead
  setTaskStarred1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskStarred ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
2103645782829bfd518ec23efae6ea77
  setTaskStarred2 ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Esqueleto.Internal.Internal.Update Entity.Task)
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wsetAux
                   @ Entity.Task
                   @ GHC.Types.Bool
                   Entity.$fPersistEntityTask
                   Query.setTaskStarred3
                     `cast`
                   (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Bool>_N)
                   Query.setTaskDone3) -}
23d9b4cd7ebb8fc475e56f3e6425d042
  setTaskStarred3 :: Entity.R:EntityFieldTasktyp GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Entity.TaskIsStarred
                   @ GHC.Types.Bool
                   Query.$s$WTaskIsDone_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Bool>_N <GHC.Types.Bool>_N)) -}
43f76c5c54e97a945e0fb2db08c8891e
  setTaskStartable ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskStartable1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e8a375999f182484d0d6fcac517a2992
  setTaskStartable1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskStartable ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
adc4a0b9c9ccd3c1283d3147a73bbc87
  setTaskStartable2 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
  {- HasNoCafRefs, Strictness: m8,
     Unfolding: (Entity.TaskStartable
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   Query.$s$WTaskDeadline_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Time.Clock.Internal.UTCTime.UTCTime>_N <GHC.Maybe.Maybe
                                                                                                            Data.Time.Clock.Internal.UTCTime.UTCTime>_N)) -}
eb9f62a04b40bfae35fb524337cbab9f
  setTaskTitle ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> Data.Text.Internal.Text -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskTitle1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
39f00ac9b49e60f573fe83dfec3482f3
  setTaskTitle1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Text.Internal.Text)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskTitle ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
ad184f2b80d4e0623bd28618e958c113
  setTaskTitle2 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m11,
     Unfolding: (Entity.TaskTitle
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   Query.$s$WTaskLink_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Text.Internal.Text>_N <GHC.Maybe.Maybe
                                                                                           Data.Text.Internal.Text>_N)) -}
2781d58b76326d0277ed6284a9ecbfd3
  setTaskUser ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> Entity.UserId -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskUser1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Entity.UserId>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3db7da3e838526eb53dee088878d0e35
  setTaskUser1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Entity.UserId
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Entity.UserId)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskUser ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
f8a3315cbe2e60033583f2cd95730274
  setTaskUser2 ::
    Entity.R:EntityFieldTasktyp
      (Database.Persist.Class.PersistEntity.Key Entity.User)
  {- HasNoCafRefs, Strictness: m12,
     Unfolding: (Entity.TaskUser
                   @ (Database.Persist.Class.PersistEntity.Key Entity.User)
                   Query.$s$WDurationUser_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Entity.User>_N <Database.Persist.Class.PersistEntity.Key
                                                         Entity.User>_N)) -}
41ea66698f44111321898b4852361937
  setTaskWeight ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskWeight1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Double>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6b7b80b7fa1cead0de3ea0491f5affb6
  setTaskWeight1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Double)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskWeight ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
bf27b9f7b72e6d7bf099d0b6875ef813
  setTaskWeight2 ::
    Entity.R:EntityFieldTasktyp (GHC.Maybe.Maybe GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Entity.TaskWeight
                   @ (GHC.Maybe.Maybe GHC.Types.Double)
                   Query.$s$WTaskWeight_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             GHC.Types.Double>_N <GHC.Maybe.Maybe
                                                                                    GHC.Types.Double>_N)) -}
"SPEC/Query $fPersistFieldMaybe @ Int" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                               GHC.Types.Int)
  Database.Persist.Class.PersistField.$fPersistFieldMaybe @ GHC.Types.Int
                                                          v
  = Query.$s$fPersistFieldMaybe1
"SPEC/Query $fPersistFieldMaybe_$ctoPersistValue @ Int" [orphan] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                                             GHC.Types.Int)
  Database.Persist.Class.PersistField.$fPersistFieldMaybe_$ctoPersistValue @ GHC.Types.Int
                                                                           $dPersistField
  = Query.$s$fPersistFieldMaybe_$ctoPersistValue1
"SPEC/Query $fSqlSelect(,)(,) @ (SqlExpr
                                  (Value (Maybe Int))) @ (Value (Maybe Int)) @ (SqlExpr
                                                                                  (Value
                                                                                     (Maybe
                                                                                        Int))) @ (Value
                                                                                                    (Maybe
                                                                                                       Int))" [orphan] forall (v1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GHC.Types.Int)))
v :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,) @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                 (GHC.Maybe.Maybe GHC.Types.Int)))
                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                              (GHC.Maybe.Maybe GHC.Types.Int))
                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                 (GHC.Maybe.Maybe GHC.Types.Int)))
                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                              (GHC.Maybe.Maybe GHC.Types.Int))
                                                         v
                                                         v1
  = Query.$s$fSqlSelect(,)(,)
"SPEC/Query $fSqlSelect(,)(,) @ (SqlExpr (Entity Task)) @ (Entity
                                                            Task) @ (SqlExpr (Value Text)) @ (Value
                                                                                                Text)" [orphan] forall (v1 :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                      (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                         (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                            Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                                      (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                         Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                             (v :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                     (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                        (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                           Entity.Task))
                                                                                                                                                                                                                                                                                                     (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                        Entity.Task))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,) @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Persist.Class.PersistEntity.Entity
                                                                 Entity.Task))
                                                         @ (Database.Persist.Class.PersistEntity.Entity
                                                              Entity.Task)
                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                 Data.Text.Internal.Text))
                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                              Data.Text.Internal.Text)
                                                         v
                                                         v1
  = Query.$s$fSqlSelect(,)(,)1
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectColCount @ (SqlExpr
                                                      (Value (Maybe Int))) @ (Value
                                                                                (Maybe
                                                                                   Int)) @ (SqlExpr
                                                                                              (Value
                                                                                                 (Maybe
                                                                                                    Int))) @ (Value
                                                                                                                (Maybe
                                                                                                                   Int))" [orphan] forall ($dSqlSelect1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GHC.Types.Int)))
dSqlSelect :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                (Database.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectColCount @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                     (GHC.Maybe.Maybe
                                                                                        GHC.Types.Int)))
                                                                             @ (Database.Esqueleto.Internal.Internal.Value
                                                                                  (GHC.Maybe.Maybe
                                                                                     GHC.Types.Int))
                                                                             @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                     (GHC.Maybe.Maybe
                                                                                        GHC.Types.Int)))
                                                                             @ (Database.Esqueleto.Internal.Internal.Value
                                                                                  (GHC.Maybe.Maybe
                                                                                     GHC.Types.Int))
                                                                             $dSqlSelect
                                                                             $dSqlSelect1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectColCount1
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectCols @ (SqlExpr
                                                  (Entity Task)) @ (Entity Task) @ (SqlExpr
                                                                                      (Value
                                                                                         Text)) @ (Value
                                                                                                     Text)" [orphan] [2] forall (w1 :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (w :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Entity.Task))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Entity.Task))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Persist.Class.PersistEntity.Entity
                                                                                 Entity.Task))
                                                                         @ (Database.Persist.Class.PersistEntity.Entity
                                                                              Entity.Task)
                                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                                 Data.Text.Internal.Text))
                                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                                              Data.Text.Internal.Text)
                                                                         w
                                                                         w1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectCols
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectCols @ (SqlExpr
                                                  (Value (Maybe Int))) @ (Value
                                                                            (Maybe Int)) @ (SqlExpr
                                                                                              (Value
                                                                                                 (Maybe
                                                                                                    Int))) @ (Value
                                                                                                                (Maybe
                                                                                                                   Int))" [orphan] [2] forall (w1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (w :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                                 (GHC.Maybe.Maybe
                                                                                    GHC.Types.Int)))
                                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                                              (GHC.Maybe.Maybe
                                                                                 GHC.Types.Int))
                                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                                 (GHC.Maybe.Maybe
                                                                                    GHC.Types.Int)))
                                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                                              (GHC.Maybe.Maybe
                                                                                 GHC.Types.Int))
                                                                         w
                                                                         w1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectCols1
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectProcessRow @ (SqlExpr
                                                        (Entity Task)) @ (Entity Task) @ (SqlExpr
                                                                                            (Value
                                                                                               Text)) @ (Value
                                                                                                           Text)" [orphan] [2] forall (w1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
ata.Text.Internal.Text))
atabase.Esqueleto.Internal.Internal.Value
ata.Text.Internal.Text))
w :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Persist.Class.PersistEntity.Entity
ntity.Task))
atabase.Persist.Class.PersistEntity.Entity
ntity.Task))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectProcessRow @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                    (Database.Persist.Class.PersistEntity.Entity
                                                                                       Entity.Task))
                                                                               @ (Database.Persist.Class.PersistEntity.Entity
                                                                                    Entity.Task)
                                                                               @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                    (Database.Esqueleto.Internal.Internal.Value
                                                                                       Data.Text.Internal.Text))
                                                                               @ (Database.Esqueleto.Internal.Internal.Value
                                                                                    Data.Text.Internal.Text)
                                                                               w
                                                                               w1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectProcessRow
"SPEC/Query $fSqlSelectSqlExprEntity @ Duration" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                         Entity.Duration)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.Duration
                                                                v
  = Query.$s$fSqlSelectSqlExprEntity
"SPEC/Query $fSqlSelectSqlExprEntity @ Schedule" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                         Entity.Schedule)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.Schedule
                                                                v
  = Query.$s$fSqlSelectSqlExprEntity2
"SPEC/Query $fSqlSelectSqlExprEntity @ Task" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                     Entity.Task)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.Task
                                                                v
  = Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
"SPEC/Query $fSqlSelectSqlExprEntity @ User" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                     Entity.User)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.User
                                                                v
  = Query.$s$fSqlSelectSqlExprEntity1
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ Duration" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                             Entity.Duration)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.Duration
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ Schedule" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                             Entity.Schedule)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.Schedule
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto3
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ Task" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.Task)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.Task
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto2
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ User" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.User)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.User
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto1
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ Duration" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                             Entity.Duration)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.Duration
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ Schedule" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                             Entity.Schedule)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.Schedule
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols3
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ Task" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.Task)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.Task
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols2
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ User" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.User)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.User
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols1
"SPEC/Query $fSqlSelectSqlExprValue @ (Maybe Int)" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                           (GHC.Maybe.Maybe
                                                                              GHC.Types.Int))
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ (GHC.Maybe.Maybe
                                                                    GHC.Types.Int)
                                                               v
  = Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
"SPEC/Query $fSqlSelectSqlExprValue @ Bool" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                    GHC.Types.Bool)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ GHC.Types.Bool
                                                               v
  = Query.$s$fSqlSelectSqlExprValue1
"SPEC/Query $fSqlSelectSqlExprValue @ Int" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                   GHC.Types.Int)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ GHC.Types.Int
                                                               v
  = Query.$s$fSqlSelectSqlExprValue
"SPEC/Query $fSqlSelectSqlExprValue @ Text" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                    Data.Text.Internal.Text)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ Data.Text.Internal.Text
                                                               v
  = Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1
"SPEC/Query $fSqlSelectSqlExprValue_$csqlInsertInto @ Int" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                       GHC.Types.Int)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto @ GHC.Types.Int
                                                                               w
  = Query.$s$fSqlSelectSqlExprValue_$csqlInsertInto2
"SPEC/Query $fSqlSelectSqlExprValue_$csqlInsertInto @ Text" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                        Data.Text.Internal.Text)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto @ Data.Text.Internal.Text
                                                                               w
  = Query.$s$fSqlSelectSqlExprValue_$csqlInsertInto1
"SPEC/Query $fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Bool" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                              GHC.Types.Bool)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow @ GHC.Types.Bool
                                                                                     w
  = Query.$s$fSqlSelectSqlExprValue_$csqlSelectProcessRow3
"SPEC/Query $fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Int" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                             GHC.Types.Int)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow @ GHC.Types.Int
                                                                                     w
  = Query.$s$fSqlSelectSqlExprValue_$csqlSelectProcessRow2
"SPEC/Query $fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Text" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                              Data.Text.Internal.Text)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Data.Text.Internal.Text
                                                                                     w
  = Query.$s$fSqlSelectSqlExprValue_$csqlSelectProcessRow1
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

