
==================== FINAL INTERFACE ====================
2020-01-01 08:12:20.3551165 UTC

interface server-0.1.0.0-BKF2RNL8jGV3ir85CyF8cO:Query 8065
  interface hash: 99ec7bdfdb610f1005e5b54333fe3167
  ABI hash: 5e24961ccd969dd51bbf2388dc1bdcf5
  export-list hash: a42292c89baee64709a01f6bef7ddcc5
  orphan hash: bea9654b3af1414c28abc35b0ac285c8
  flag hash: 56266973ac1f89f99983fe7965b5259a
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Query.getAfterMe
  Query.getAllTrunkNode
  Query.getArchivesAssigns
  Query.getBeforeMe
  Query.getBudsAssigns
  Query.getDurationsById
  Query.getMaxNode'
  Query.getMe
  Query.getTaskAssignById
  Query.getTrunkAssigns
  Query.getUndoneTaskAssigns
  Query.getUserById
  Query.insTasks
  Query.insUser
  Query.keyFromInt
  Query.setStarSwitched
  Query.setTaskDeadline
  Query.setTaskDone
  Query.setTaskDoneOrUndone
  Query.setTaskLink
  Query.setTaskStarred
  Query.setTaskStartable
  Query.setTaskTitle
  Query.setTaskUser
  Query.setTaskWeight
module dependencies: Entity
package dependencies: Only-0.1 Win32-2.6.1.0 aeson-1.4.6.0
                      aeson-compat-0.3.9 array-0.5.3.0 attoparsec-0.13.2.3
                      attoparsec-iso8601-1.0.1.0 auto-update-0.1.6 base-4.12.0.0
                      base-compat-0.10.5 base-orphans-0.8.1 base64-bytestring-1.0.0.2
                      binary-0.8.6.0 blaze-builder-0.4.1.0 blaze-html-0.9.1.2
                      blaze-markup-0.8.2.3 bytestring-0.10.8.2 case-insensitive-1.2.0.11
                      conduit-1.3.1.1 conduit-extra-1.3.4 containers-0.6.0.1 cookie-0.4.5
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 directory-1.3.3.0
                      dlist-0.8.0.7 easy-file-0.2.2 esqueleto-3.0.0 exceptions-0.10.3
                      fast-logger-2.4.17 filepath-1.4.2.1 ghc-boot-th-8.6.5
                      ghc-prim-0.5.3 hashable-1.2.7.0 http-api-data-0.4.1.1
                      http-types-0.12.3 integer-gmp-1.0.2.0 integer-logarithms-1.0.3
                      lifted-base-0.2.3.12 monad-control-1.0.2.3 monad-logger-0.3.31
                      monad-loops-0.4.3 mtl-2.2.2 old-locale-1.0.0.7 old-time-1.1.0.3
                      path-pieces-0.2.1 persistent-2.9.2 persistent-postgresql-2.9.1
                      persistent-template-2.6.0 postgresql-libpq-0.9.4.2
                      postgresql-simple-0.6.2 primitive-0.6.4.0 random-1.1
                      resource-pool-0.2.3.2 resourcet-1.2.2 scientific-0.3.6.2
                      silently-1.2.5.1 stm-2.5.0.0 stm-chans-3.0.0.4 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 time-1.8.0.2
                      time-compat-1.9.2.2 transformers-0.5.6.2 transformers-base-0.4.5.2
                      unix-compat-0.5.2 unix-time-0.4.7 unliftio-core-0.1.2.0
                      unordered-containers-0.2.10.0 uuid-types-1.0.3 vector-0.12.0.3
orphans: persistent-template-2.6.0:Database.Persist.TH
         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistStore
         attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         vector-0.12.0.3:Data.Vector.Unboxed
         unix-time-0.4.7:Data.UnixTime.Diff
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.6.2:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: Only-0.1:Data.Tuple.Only
                         aeson-1.4.6.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.7:Data.DList ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.31:Control.Monad.Logger
                         persistent-2.9.2:Database.Persist.Class.PersistConfig
                         persistent-2.9.2:Database.Persist.Class.PersistEntity
                         persistent-2.9.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.9.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.9.1:Database.Persist.Postgresql
                         postgresql-simple-0.6.2:Database.PostgreSQL.Simple.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         server-0.1.0.0-BKF2RNL8jGV3ir85CyF8cO:Entity
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Control.Monad.IO.Class eba50379fd761a0a02fefdca35521253
import  -/  base-4.12.0.0:Data.Foldable bdeac546b12282c8986759606b9295a5
import  -/  base-4.12.0.0:GHC.Base fbe365a916ebeeeb4bc1f895dbe83e42
import  -/  base-4.12.0.0:GHC.Real 3b42f3125c1d17d4e4b4437a3c97310f
import  -/  base-4.12.0.0:Prelude 80c668cb99fbafebd524c5e897f8c982
import  -/  esqueleto-3.0.0:Database.Esqueleto 6ac4220f85e8bdba091db6feac6ae0ef
import  -/  esqueleto-3.0.0:Database.Esqueleto.Internal.Internal 2f0651bf0ed31eebbba61f6ed9e1caf2
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  persistent-2.9.2:Database.Persist.Class.PersistEntity cfe839cf921a1b4892de7875b971066e
import  -/  persistent-2.9.2:Database.Persist.Class.PersistStore 5d8b5c60b75269f4387c3074bd3766b4
import  -/  persistent-2.9.2:Database.Persist.Sql 63ab64f26f233421350c876aeabffa0b
import  -/  persistent-2.9.2:Database.Persist.Sql.Orphan.PersistStore 59619775bc39b796d33dbc01f00fb70d
import  -/  persistent-2.9.2:Database.Persist.Sql.Run 87b3637665a8801d9fe6e324474bde5b
import  -/  persistent-2.9.2:Database.Persist.Sql.Types e09841be0c3d8e47d2a4a917c4c7bc69
import  -/  persistent-2.9.2:Database.Persist.Sql.Types.Internal 4b75bc4bba7f20d98727326bbb78bb9c
import  -/  Entity 499a19e0382eedf588ae0114edb40d41
  exports: aee88aaa5f92238748bae8c0660b1c22
  Duration 1f0a75054b84276563ca1db6869d107a
  DurationLeft 4eeff416b91b39bafd3411dbd2634565
  DurationUser b627ad0b27ecfea71b9c11355d67cd28
  Task 62ad2c212fc4a578d9a7df9dbb6f4734
  TaskDeadline 781cab427a737cc1e3b07bc40973b46a
  TaskId 77d6ca5b554f81077c1b105ed405d73d
  TaskInitial 094ced857b11980352c59371701182db
  TaskIsDone 1e589b312169b6023c2c33633cf751dc
  TaskIsStarred d123e2c008e62fc747f1ad38ba41a19f
  TaskKey d4132f10ef2c968d77f56113d295c773
  TaskLink 7b438558fef243b5916a03c3118628ec
  TaskStartable da6e92bfc915d16cb5f62ae7daa33467
  TaskTerminal 33a997a54e4fd5264a3effcb12300850
  TaskTitle fcc319adf749aba8d0dd33722cc1cb9c
  TaskUser 9893973828d6a9c2157d79e069aaf093
  TaskWeight 85548163f06eaa9eb799a165bdd974ef
  User 01ffdb869d675fb42aa5f8663452cea8
  UserId bc34a59498009f64ba2e9654a9f468c3
  UserId 0d1d8f6b6dc1859a8830f5e06372150c
  UserKey f6946c369c359428ed16d30c6291e481
  UserName dd2ade6372fe155120240790eb267468
  pgPool 98de1c4b74cec6aaf57ffe171f436b45
import  -/  text-1.2.3.1:Data.Text 0b381763277d88cdfc75e39569eadf1c
import  -/  text-1.2.3.1:Data.Text.Internal f53c34e7fc05c697a08afbad7e0bff24
import  -/  time-1.8.0.2:Data.Time 928e777d2f4e910b49e435e797799a63
import  -/  time-1.8.0.2:Data.Time.Clock.Internal.UTCTime 861e4389489f256886c08017da95536f
1c0355330d229ad1ff785603aea6571a
  $s$WDurationLeft_$d~~ :: GHC.Types.Int GHC.Types.~~ GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @~ <GHC.Types.Int>_N) -}
17ddcc4a5295726715787da268777719
  $s$WDurationUser_$d~~ ::
    Database.Persist.Class.PersistEntity.Key Entity.User
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Entity.User
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Entity.User)
                   @ (Database.Persist.Class.PersistEntity.Key Entity.User)
                   @~ <Database.Persist.Class.PersistEntity.Key Entity.User>_N) -}
3d37f5836faa1218cb153e64a4d3bca6
  $s$WTaskDeadline_$d~~ ::
    GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime
    GHC.Types.~~ GHC.Maybe.Maybe
                   Data.Time.Clock.Internal.UTCTime.UTCTime
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   @~ <GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime>_N) -}
92885bfdf168d8ef87d73bbfd41d3488
  $s$WTaskId_$d~~ ::
    Database.Persist.Class.PersistEntity.Key Entity.Task
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Entity.Task
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   @~ <Database.Persist.Class.PersistEntity.Key Entity.Task>_N) -}
d8b348473c606c082be6196a0a8cab5d
  $s$WTaskIsDone_$d~~ :: GHC.Types.Bool GHC.Types.~~ GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   @~ <GHC.Types.Bool>_N) -}
d82aaf13735c88726ddf82de8a4f5c50
  $s$WTaskLink_$d~~ ::
    GHC.Maybe.Maybe Data.Text.Internal.Text
    GHC.Types.~~ GHC.Maybe.Maybe Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   @~ <GHC.Maybe.Maybe Data.Text.Internal.Text>_N) -}
d6f3c32af01cd0aff8a8b993b0aa59d5
  $s$WTaskWeight_$d~~ ::
    GHC.Maybe.Maybe GHC.Types.Double
    GHC.Types.~~ GHC.Maybe.Maybe GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Maybe.Maybe GHC.Types.Double)
                   @ (GHC.Maybe.Maybe GHC.Types.Double)
                   @~ <GHC.Maybe.Maybe GHC.Types.Double>_N) -}
ced3fa33409a81952bc78ed1fde6e55f
  $s$WUserName_$d~~ ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
7c45446ba2ffabe34b4257e8bcc7742a
  $s$fFromPreprocessjoin2 ::
    Database.Esqueleto.Internal.Internal.SqlQuery
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.PreprocessedFrom
            (Database.Esqueleto.Internal.Internal.SqlExpr
               (Database.Persist.Class.PersistEntity.Entity Entity.User))))
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wfromStart
                   @ Entity.User
                   Entity.$fPersistEntityUser) -}
9788fffe2b70c39e5177c1eb5537ed58
  $s$fFromPreprocessjoin3 ::
    Database.Esqueleto.Internal.Internal.SqlQuery
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.PreprocessedFrom
            (Database.Esqueleto.Internal.Internal.SqlExpr
               (Database.Persist.Class.PersistEntity.Entity Entity.Task))))
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wfromStart
                   @ Entity.Task
                   Entity.$fPersistEntityTask) -}
8ae811a0ae437cb6f40f94e40488cdfe
  $s$fPersistFieldMaybe3 ::
    Database.Persist.Class.PersistField.PersistField
      (GHC.Maybe.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Maybe.Maybe GHC.Types.Int)
                  (\ (ds :: GHC.Maybe.Maybe GHC.Types.Int) ->
                   case ds of wild {
                     GHC.Maybe.Nothing -> Database.Persist.Types.Base.PersistNull
                     GHC.Maybe.Just a1
                     -> Database.Persist.Class.PersistField.$fPersistFieldInt_$ctoPersistValue
                          a1 })
                  (\ (ds :: Database.Persist.Types.Base.PersistValue) ->
                   case ds of wild {
                     DEFAULT
                     -> Data.Either.Left
                          @ Data.Text.Internal.Text
                          @ (GHC.Maybe.Maybe GHC.Types.Int)
                          (Database.Persist.Class.PersistField.fromPersistValueError
                             Database.Persist.Class.PersistField.$fPersistFieldInt3
                             Database.Persist.Class.PersistField.$fPersistFieldInt1
                             wild)
                     Database.Persist.Types.Base.PersistInt64 i
                     -> Data.Either.Right
                          @ Data.Text.Internal.Text
                          @ (GHC.Maybe.Maybe GHC.Types.Int)
                          (GHC.Maybe.Just
                             @ GHC.Types.Int
                             (case i of wild1 { GHC.Int.I64# x# -> GHC.Types.I# x# }))
                     Database.Persist.Types.Base.PersistDouble i
                     -> Data.Either.Right
                          @ Data.Text.Internal.Text
                          @ (GHC.Maybe.Maybe GHC.Types.Int)
                          (GHC.Maybe.Just
                             @ GHC.Types.Int
                             (GHC.Float.RealFracMethods.double2Int i))
                     Database.Persist.Types.Base.PersistNull
                     -> Database.Persist.Class.PersistField.$fPersistFieldMaybe1
                          @ GHC.Types.Int }) -}
7d361b64fde3a2c99e42fbaec211ff46
  $s$fPersistFieldMaybe_$ctoPersistValue3 ::
    GHC.Maybe.Maybe GHC.Types.Int
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Maybe.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Maybe.Nothing -> Database.Persist.Types.Base.PersistNull
                   GHC.Maybe.Just a1
                   -> Database.Persist.Class.PersistField.$fPersistFieldInt_$ctoPersistValue
                        a1 }) -}
46380200c628724c246d9a7e784dff07
  $s$fSqlSelect(,)(,) ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)),
       Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)))
      (Database.Esqueleto.Internal.Internal.Value
         (GHC.Maybe.Maybe GHC.Types.Int),
       Database.Esqueleto.Internal.Internal.Value
         (GHC.Maybe.Maybe GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int)),
                     Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int)))
                  @ (Database.Esqueleto.Internal.Internal.Value
                       (GHC.Maybe.Maybe GHC.Types.Int),
                     Database.Esqueleto.Internal.Internal.Value
                       (GHC.Maybe.Maybe GHC.Types.Int))
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)),
                                Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                   GHC.Types.I# 2#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectProcessRow
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int)))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int))
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue)
                  (GHC.Prim.raise#
                     @ GHC.Exception.Type.SomeException
                     @ 'GHC.Types.LiftedRep
                     @ (Database.Esqueleto.Internal.Internal.IdentInfo
                        -> (Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Esqueleto.Internal.Internal.Value
                                 (GHC.Maybe.Maybe GHC.Types.Int)),
                            Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Esqueleto.Internal.Internal.Value
                                 (GHC.Maybe.Maybe GHC.Types.Int)))
                        -> (Data.Text.Internal.Builder.Builder,
                            [Database.Persist.Types.Base.PersistValue]))
                     (Database.Esqueleto.Internal.Internal.$fExceptionEsqueletoError_$ctoException
                        Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)1)) -}
7383235587517e5f796ba4a281c34269
  $s$fSqlSelect(,)(,)1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task),
       Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text))
      (Database.Persist.Class.PersistEntity.Entity Entity.Task,
       Database.Esqueleto.Internal.Internal.Value Data.Text.Internal.Text)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                     Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Task,
                     Database.Esqueleto.Internal.Internal.Value Data.Text.Internal.Text)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                     @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             Data.Text.Internal.Text))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text)
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     Data.Text.Internal.Text))) ->
                   case Entity.$fPersistEntityTask82 of ww { Database.Persist.Types.Base.EntityDef ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                   case ww3 of ww11 { Database.Persist.Types.Base.FieldDef ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                   case GHC.List.$wlenAcc
                          @ Database.Persist.Types.Base.FieldDef
                          ww5
                          0# of ww19 { DEFAULT ->
                   case ww18 of wild2 {
                     DEFAULT -> GHC.Types.I# (GHC.Prim.+# 2# ww19)
                     Database.Persist.Types.Base.CompositeRef c1
                     -> GHC.Types.I# (GHC.Prim.+# ww19 1#) } } } })
                  (Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectProcessRow
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                     @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                     @ (Database.Esqueleto.Internal.Internal.SqlExpr
                          (Database.Esqueleto.Internal.Internal.Value
                             Data.Text.Internal.Text))
                     @ (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text)
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                     Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1)
                  (GHC.Prim.raise#
                     @ GHC.Exception.Type.SomeException
                     @ 'GHC.Types.LiftedRep
                     @ (Database.Esqueleto.Internal.Internal.IdentInfo
                        -> (Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                            Database.Esqueleto.Internal.Internal.SqlExpr
                              (Database.Esqueleto.Internal.Internal.Value
                                 Data.Text.Internal.Text))
                        -> (Data.Text.Internal.Builder.Builder,
                            [Database.Persist.Types.Base.PersistValue]))
                     (Database.Esqueleto.Internal.Internal.$fExceptionEsqueletoError_$ctoException
                        Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)1)) -}
f538f2c45b0cae756163c2ed40933c98
  $s$fSqlSelect(,)(,)_$csqlSelectColCount1 ::
    Data.Proxy.Proxy
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)),
       Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)))
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (eta :: Data.Proxy.Proxy
                             (Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe GHC.Types.Int)),
                              Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                 GHC.Types.I# 2#) -}
766a794a66ceee57ee9b19aa7e6a7e08
  $s$fSqlSelect(,)(,)_$csqlSelectCols ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> (Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int)),
        Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int)))
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2, Strictness: <L,U><S,1*U(U,U)>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w3 :: (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)),
                           Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                 case w3 of ww { (,) ww1 ww2 ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)))
                        @ (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int))
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                (GHC.Maybe.Maybe GHC.Types.Int)))
                        @ (Database.Esqueleto.Internal.Internal.Value
                             (GHC.Maybe.Maybe GHC.Types.Int))
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
                        w2
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
dbebdb5f59ce87335ee17c23ea52bfbd
  $s$fSqlSelect(,)(,)_$csqlSelectCols1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> (Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Persist.Class.PersistEntity.Entity Entity.Task),
        Database.Esqueleto.Internal.Internal.SqlExpr
          (Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text))
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2, Strictness: <L,U><S,1*U(U,U)>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w3 :: (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                           Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                Data.Text.Internal.Text))) ->
                 case w3 of ww { (,) ww1 ww2 ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                        @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                        @ (Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Esqueleto.Internal.Internal.Value
                                Data.Text.Internal.Text))
                        @ (Database.Esqueleto.Internal.Internal.Value
                             Data.Text.Internal.Text)
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
                        Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1
                        w2
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
45c384465d545faf3052777c9ec099fc
  $s$fSqlSelect(,)(,)_$csqlSelectProcessRow ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Entity Entity.Task,
          Database.Esqueleto.Internal.Internal.Value Data.Text.Internal.Text)
  {- Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                   @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value
                           Data.Text.Internal.Text))
                   @ (Database.Esqueleto.Internal.Internal.Value
                        Data.Text.Internal.Text)
                   (\ (x3 :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Entity.Task)))[OneShot] ->
                    case Entity.$fPersistEntityTask82 of ww { Database.Persist.Types.Base.EntityDef ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                    case ww3 of ww11 { Database.Persist.Types.Base.FieldDef ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                    case GHC.List.$wlenAcc
                           @ Database.Persist.Types.Base.FieldDef
                           ww5
                           0# of ww19 { DEFAULT ->
                    case ww18 of wild2 {
                      DEFAULT -> GHC.Types.I# (GHC.Prim.+# ww19 1#)
                      Database.Persist.Types.Base.CompositeRef c1
                      -> GHC.Types.I# ww19 } } } })
                   (\ (w2 :: [Database.Persist.Types.Base.PersistValue]) ->
                    case Entity.$fPersistEntityTask82 of ww { Database.Persist.Types.Base.EntityDef ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                    case ww3 of ww11 { Database.Persist.Types.Base.FieldDef ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                    Database.Persist.Sql.Util.$wparseEntityValues
                      @ Entity.Task
                      Entity.$fPersistEntityTask
                      ww18
                      ww5
                      w2 } })
                   Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1) -}
1c433c77eb233271417b8eae6cd74586
  $s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task))
      (Database.Persist.Class.PersistEntity.Entity Entity.Task)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Task))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.Task
                     Entity.$fPersistEntityTask)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.Task
                     Entity.$fPersistEntityTask)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.Task
                     Entity.$fPersistEntityTask)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.Task
                     Entity.$fPersistEntityTask) -}
03414a5cf1ca6c5f2d988af3c2342670
  $s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            (GHC.Maybe.Maybe GHC.Types.Int)))
      (Database.Esqueleto.Internal.Internal.Value
         (GHC.Maybe.Maybe GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          (GHC.Maybe.Maybe GHC.Types.Int)))
                  @ (Database.Esqueleto.Internal.Internal.Value
                       (GHC.Maybe.Maybe GHC.Types.Int))
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ (GHC.Maybe.Maybe GHC.Types.Int))
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ (GHC.Maybe.Maybe GHC.Types.Int)
                     Query.$s$fPersistFieldMaybe3)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto
                     @ (GHC.Maybe.Maybe GHC.Types.Int)
                     Query.$s$fPersistFieldMaybe3) -}
7525247973fe46fa055a692bc300d14d
  $s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text))
      (Database.Esqueleto.Internal.Internal.Value
         Data.Text.Internal.Text)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value
                          Data.Text.Internal.Text))
                  @ (Database.Esqueleto.Internal.Internal.Value
                       Data.Text.Internal.Text)
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ Data.Text.Internal.Text)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     Data.Text.Internal.Text))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ Data.Text.Internal.Text
                     Database.Persist.Class.PersistField.$fPersistFieldText0)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto
                     @ Data.Text.Internal.Text
                     Database.Persist.Class.PersistField.$fPersistFieldText0) -}
04dbabd110b1b6dff19cd99f0a3200af
  $s$fSqlSelectSqlExprEntity ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Duration))
      (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.Duration))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.Duration
                     Entity.$fPersistEntityDuration) -}
de786ce81439ef19f2da1bc572b91415
  $s$fSqlSelectSqlExprEntity1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.User))
      (Database.Persist.Class.PersistEntity.Entity Entity.User)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Persist.Class.PersistEntity.Entity Entity.User))
                  @ (Database.Persist.Class.PersistEntity.Entity Entity.User)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols
                     @ Entity.User
                     Entity.$fPersistEntityUser)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectColCount
                     @ Entity.User
                     Entity.$fPersistEntityUser)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectProcessRow
                     @ Entity.User
                     Entity.$fPersistEntityUser)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto
                     @ Entity.User
                     Entity.$fPersistEntityUser) -}
6beb587b05447eaaa0a95380df2495c8
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
2b5ac3431534a4b3d14bd08be9544ed7
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.User)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.User)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
9a7e636aa3a53a3a1cea95aa399f8c8e
  $s$fSqlSelectSqlExprEntity_$csqlInsertInto2 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
2ad1432298aa9f0a4731ca36655a926f
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Duration)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.Duration)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.Duration
                        Entity.$fPersistEntityDuration
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
efe3e8ef7bb5ac4528a474f801ea0885
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols1 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.User)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.User)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.User
                        Entity.$fPersistEntityUser
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
f7b1988032b9c247cdefb752d22ee1ef
  $s$fSqlSelectSqlExprEntity_$csqlSelectCols2 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Persist.Class.PersistEntity.Entity Entity.Task)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 2,
     Strictness: <L,U(U(A,A,A,A,A,A,A,A,A,A,A,C(U(U,U,U)),A,A,A,A,A,A),A)><S,1*U>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Database.Esqueleto.Internal.Internal.IdentInfo)
                   (w2 :: Database.Esqueleto.Internal.Internal.SqlExpr
                            (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                 case Database.Esqueleto.Internal.Internal.$w$csqlSelectCols3
                        @ Entity.Task
                        Entity.$fPersistEntityTask
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
f75e68eb806b4a62e450512ab945c96f
  $s$fSqlSelectSqlExprValue ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool))
      (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool))
                  @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ GHC.Types.Bool)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ GHC.Types.Bool
                     Database.Persist.Class.PersistField.$fPersistFieldBool)
                  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$s$csqlInsertInto -}
72cb6f28f7f91fdd7522fd2a35837832
  $s$fSqlSelectSqlExprValue1 ::
    Database.Esqueleto.Internal.Internal.SqlSelect
      (Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
      (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Esqueleto.Internal.Internal.SqlExpr
                       (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                  @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
                  (Database.Esqueleto.Internal.Internal.materializeExpr
                     @ GHC.Types.Int)
                  (\ (eta :: Data.Proxy.Proxy
                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))) ->
                   GHC.Types.I# 1#)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow
                     @ GHC.Types.Int
                     Database.Persist.Class.PersistField.$fPersistFieldInt)
                  (Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto
                     @ GHC.Types.Int
                     Database.Persist.Class.PersistField.$fPersistFieldInt) -}
143e58a4b55d57ce6654360e40978931
  $s$fSqlSelectSqlExprValue_$csqlInsertInto ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value
                              Data.Text.Internal.Text)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
49a0d6f1cdaae6fe29815cd37c50eeaf
  $s$fSqlSelectSqlExprValue_$csqlInsertInto2 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Strictness: x, Inline: [2],
     Unfolding: InlineRule (0, True, False)
                (GHC.Prim.raise#
                   @ GHC.Exception.Type.SomeException
                   @ 'GHC.Types.LiftedRep
                   @ (Database.Esqueleto.Internal.Internal.IdentInfo
                      -> Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
                      -> (Data.Text.Internal.Builder.Builder,
                          [Database.Persist.Types.Base.PersistValue]))
                   Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity1) -}
a56583370f2f87ebdc66dfecf2e3bf55
  $s$fSqlSelectSqlExprValue_$csqlSelectProcessRow1 ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Esqueleto.Internal.Internal.Value
            Data.Text.Internal.Text)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: [Database.Persist.Types.Base.PersistValue]) ->
                 Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow1
                   @ Data.Text.Internal.Text
                   Database.Persist.Types.Base.fromPersistValueText
                   w1) -}
5ed07fbbc4a7abf265e5886a054cfca9
  $s$fSqlSelectSqlExprValue_$csqlSelectProcessRow2 ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: [Database.Persist.Types.Base.PersistValue]) ->
                 Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow1
                   @ GHC.Types.Bool
                   Database.Persist.Class.PersistField.$fPersistFieldBool_$cfromPersistValue
                   w1) -}
3248988c5482855ebeea056aa436bf91
  $s$fSqlSelectSqlExprValue_$csqlSelectProcessRow3 ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: [Database.Persist.Types.Base.PersistValue]) ->
                 Database.Esqueleto.Internal.Internal.$w$csqlSelectProcessRow1
                   @ GHC.Types.Int
                   Database.Persist.Class.PersistField.$fPersistFieldInt_$cfromPersistValue
                   w1) -}
a5e60e0fb4ed2add4a24c4cbe142ca01
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Query.$trModule3 Query.$trModule1) -}
f322cb3250bea21a64e8af199824d478
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Query.$trModule2) -}
b8fa65e25297ab2c778eb5f0adec8c72
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Query"#) -}
ecbb3e59f80d2ac28e8293a66c76e1bd
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Query.$trModule4) -}
ec95006b963f934a170b93f0b67a386f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("server-0.1.0.0-BKF2RNL8jGV3ir85CyF8cO"#) -}
3965841a19e5caea62b85a6b933d3a70
  $w$dFrom ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> (# (Database.Esqueleto.Internal.Internal.SqlExpr
             (Database.Persist.Class.PersistEntity.Entity Entity.Task),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2],
     Unfolding: (\ (w :: Database.Esqueleto.Internal.Internal.IdentState) ->
                 let {
                   ds1 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                   (Database.Esqueleto.Internal.Internal.SqlExpr
                                      (Database.Persist.Class.PersistEntity.Entity Entity.Task))),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = Query.$s$fFromPreprocessjoin3
                       `cast`
                     (Database.Esqueleto.Internal.Internal.N:SqlQuery[0] <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                            (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                               (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Persist.Class.PersistEntity.Entity
                                                                                     Entity.Task)))>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                              <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                              <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                 Database.Esqueleto.Internal.Internal.IdentState
                                                                                                                 Data.Functor.Identity.Identity>_R
                                                                                                              <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                 (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                                                                    (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                       (Database.Persist.Class.PersistEntity.Entity
                                                                                                                          Entity.Task)))>_N ; Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                                                  <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                                                                  <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                      (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                                                                                                                                         (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                            (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                               Entity.Task))),
                                                                                                                                                    Database.Esqueleto.Internal.Internal.SideData)>_N))
                       w
                 } in
                 let {
                   ds2 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                       (Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Task))),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 ->
                     case a2 of wild2 { Database.Esqueleto.Internal.Internal.EPreprocessedFrom a4 co ret from_1 ->
                     ((ret,
                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                         (Database.Esqueleto.Internal.Internal.SideData
                            Database.Esqueleto.Internal.Internal.DistinctAll
                            (GHC.Types.:
                               @ Database.Esqueleto.Internal.Internal.FromClause
                               from_1
                               (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.FromClause))
                            (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SetClause)
                            Database.Esqueleto.Internal.Internal.NoWhere
                            (GHC.Types.[] @ Database.Esqueleto.Internal.Internal.SomeValue)
                              `cast`
                            (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                            Database.Esqueleto.Internal.Internal.NoWhere
                            (GHC.Types.[]
                               @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                    Database.Esqueleto.Internal.Internal.OrderBy))
                            Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                            (GHC.Maybe.Nothing
                               @ Database.Esqueleto.Internal.Internal.LockingKind)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                         Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty),
                      s')
                       `cast`
                     (Sym (Data.Functor.Identity.N:Identity[0]
                               ((,)
                                  ((,)
                                     (Sub (Nth:0 co))
                                     <Database.Esqueleto.Internal.Internal.SideData>_R)_R
                                  <Database.Esqueleto.Internal.Internal.IdentState>_R)_R)) } } }
                 } in
                 (# (case ds2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) b1 w' -> b1 } },
                     case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Esqueleto.Internal.Internal.PreprocessedFrom
                                       (Database.Esqueleto.Internal.Internal.SqlExpr
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Entity.Task))),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 ->
                     case ds2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild2 { (,) a3 s'1 ->
                     case a3 of wild3 { (,) b1 w' ->
                     Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                       w3
                       w' } } } }),
                    case ds2
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                 Database.Esqueleto.Internal.Internal.SideData),
                                Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                    s' } #)) -}
2c371807d8e4043f19953d61d4dddec7
  $wgetAfterMe ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
2d19a946acc4903c2c3786562b3844d9
  $wgetArchivesAssigns ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
0327c55e0a34987c485cf95941a3cd8f
  $wgetBeforeMe ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
2487803f28725a1e5941da806fb0d462
  $wgetBudsAssigns ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
40aeb5bb4a9f75bce9b928e8cbcbbb18
  $wgetDurationsById ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Duration] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
b23893f649f52a98d75e08a75c66a590
  $wgetMe ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
ba15fccf4ffcaf72b9eea64a8a43df96
  $wgetTaskAssignById ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
d5a07903ff53a8b050b7686fe3f9c7d8
  $wgetTrunkAssigns ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
4f66dc32db852c4c3a7e28148fccb6dd
  $wgetUndoneTaskAssigns ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
b248a3cdf54ba8078e5a84f2af7329c7
  $wgetUserById ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.User] #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
bbcd8b7aa0384033ea5d45614e666044
  $wsetStarSwitched ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
6139a3ca6fa48be14da7a4b0111390b3
  $wsetTaskDeadline ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistUTCTime w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                              @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                          Entity.$fPersistEntityTask
                          Query.setTaskDeadline4
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Time.Clock.Internal.UTCTime.UTCTime>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl35 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl34
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl33 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl35))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
9ab9a53f7f029f2316b72e5c42a6c335
  $wsetTaskDone ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl33
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w2 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case Query.setTaskDone2 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl34))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w2))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w1) -}
8ce3cb6d1daaab86ce75d957b974c4aa
  $wsetTaskDoneOrUndone ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2] -}
d22739a263859a402b6810de935924ae
  $wsetTaskLink ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistText w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Text.Internal.Text))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Text.Internal.Text))
                              @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Text.Internal.Text)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                          Entity.$fPersistEntityTask
                          Query.setTaskLink2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Text.Internal.Text>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl35 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl34
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl33 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl35))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
600081360f364d365906d79de530556b
  $wsetTaskStarred ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl33
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w2 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case Query.setTaskStarred2 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl34))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w2))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w1) -}
b12c5af5d51cc11d60e1fc5662f55170
  $wsetTaskStartable ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistUTCTime w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                              @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                          Entity.$fPersistEntityTask
                          Query.setTaskStartable2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Time.Clock.Internal.UTCTime.UTCTime>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl35 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl34
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl33 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl35))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
2c3511ec659907755cdfa81664919778
  $wsetTaskTitle ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistText w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe Data.Text.Internal.Text))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe Data.Text.Internal.Text))
                              @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe Data.Text.Internal.Text)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                          Entity.$fPersistEntityTask
                          Query.setTaskTitle2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      Data.Text.Internal.Text>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl35 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl34
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl33 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl35))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
b9bf6a003f7ad688b3869c002773f007
  $wsetTaskUser ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> Entity.UserId
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: Entity.UserId)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistInt64
                              w1
                                `cast`
                              (Entity.D:R:KeyUser0[0] ; (Entity.N:R:KeyUser[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value Entity.UserId)
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value Entity.UserId)
                              @ Entity.UserId
                              @~ <Database.Esqueleto.Internal.Internal.Value Entity.UserId>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ Entity.UserId
                          Entity.$fPersistEntityTask
                          Query.setTaskUser2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Entity.UserId>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl35 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl34
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl33 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl35))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
69d5732fa2213cc9d14da66a66927834
  $wsetTaskWeight ::
    GHC.Types.IO Database.Persist.Sql.Types.Internal.SqlBackend
    -> (Database.Persist.Sql.Types.Internal.SqlBackend
        -> GHC.Types.IO ())
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool
            Database.Persist.Sql.Types.Internal.SqlBackend)
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,C(U)><L,1*C1(C1(U))><S,1*U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Persist.Sql.Types.Internal.SqlBackend)
                   (ww1 :: Database.Persist.Sql.Types.Internal.SqlBackend
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool
                                Database.Persist.Sql.Types.Internal.SqlBackend))
                   (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Double)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    let {
                      lvl33 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Update Entity.Task)
                      = let {
                          x3 :: Database.Persist.Types.Base.PersistValue
                          = Database.Persist.Types.Base.PersistDouble w1
                        } in
                        let {
                          x4 :: [Database.Persist.Types.Base.PersistValue]
                          = GHC.Types.:
                              @ Database.Persist.Types.Base.PersistValue
                              x3
                              (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                        } in
                        let {
                          x5 :: (Data.Text.Internal.Builder.Builder,
                                 [Database.Persist.Types.Base.PersistValue])
                          = (Database.Esqueleto.Internal.Internal.exists5
                               `cast`
                             ((forall (s :: <*>_N).
                               <Data.Text.Internal.Builder.Buffer s
                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                               ->_R Sym (GHC.ST.N:ST[0]
                                             <s>_N
                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                             x4)
                        } in
                        let {
                          expr :: Database.Esqueleto.Internal.Internal.IdentInfo
                                  -> (Data.Text.Internal.Builder.Builder,
                                      [Database.Persist.Types.Base.PersistValue])
                            {- Arity: 1, Strictness: <L,A>,
                               Unfolding: InlineRule (1, True, True)
                                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                           x5) -}
                          = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                        } in
                        let {
                          expr1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                     (Database.Esqueleto.Internal.Internal.Value
                                        (GHC.Maybe.Maybe GHC.Types.Double))
                          = Database.Esqueleto.Internal.Internal.ERaw
                              @ (Database.Esqueleto.Internal.Internal.Value
                                   (GHC.Maybe.Maybe GHC.Types.Double))
                              @ (GHC.Maybe.Maybe GHC.Types.Double)
                              @~ <Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Double)>_N
                              Database.Esqueleto.Internal.Internal.Never
                              expr
                        } in
                        Database.Esqueleto.Internal.Internal.$wsetAux
                          @ Entity.Task
                          @ (GHC.Maybe.Maybe GHC.Types.Double)
                          Entity.$fPersistEntityTask
                          Query.setTaskWeight2
                            `cast`
                          (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Maybe.Maybe
                                                                      GHC.Types.Double>_N)
                          (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                       (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                           expr1)
                    } in
                    let {
                      x3 :: Database.Persist.Class.PersistEntity.Key Entity.Task
                      = case w of wild { GHC.Types.I# x# ->
                        (GHC.Int.I64# x#)
                          `cast`
                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]) ; (Sym (Entity.N:R:KeyTask[0]) ; Sym (Entity.D:R:KeyTask0[0])))) }
                    } in
                    let {
                      x1 :: Database.Persist.Types.Base.PersistValue
                      = Database.Persist.Types.Base.PersistInt64
                          x3
                            `cast`
                          (Entity.D:R:KeyTask0[0] ; (Entity.N:R:KeyTask[0] ; (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0] ; Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))
                    } in
                    let {
                      x4 :: [Database.Persist.Types.Base.PersistValue]
                      = GHC.Types.:
                          @ Database.Persist.Types.Base.PersistValue
                          x1
                          (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)
                    } in
                    let {
                      x5 :: (Data.Text.Internal.Builder.Builder,
                             [Database.Persist.Types.Base.PersistValue])
                      = (Database.Esqueleto.Internal.Internal.exists5
                           `cast`
                         ((forall (s :: <*>_N).
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                         x4)
                    } in
                    let {
                      lvl34 :: Database.Esqueleto.Internal.Internal.IdentInfo
                               -> (Data.Text.Internal.Builder.Builder,
                                   [Database.Persist.Types.Base.PersistValue])
                        {- Arity: 1, Strictness: <L,A>,
                           Unfolding: InlineRule (1, True, True)
                                      (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                                       x5) -}
                      = \ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) -> x5
                    } in
                    let {
                      lvl35 :: Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (Database.Persist.Class.PersistEntity.Key Entity.Task))
                      = Database.Esqueleto.Internal.Internal.ERaw
                          @ (Database.Esqueleto.Internal.Internal.Value
                               (Database.Persist.Class.PersistEntity.Key Entity.Task))
                          @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                          @~ <Database.Esqueleto.Internal.Internal.Value
                                (Database.Persist.Class.PersistEntity.Key Entity.Task)>_N
                          Database.Esqueleto.Internal.Internal.Never
                          lvl34
                    } in
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (x2 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case (Database.Esqueleto.Internal.Internal.$wupdateCount
                               @ GHC.Types.IO
                               @ Entity.Task
                               Control.Monad.IO.Class.$fMonadIOIO
                               Entity.$fPersistEntityTask
                               (\ (task :: Database.Esqueleto.Internal.Internal.SqlExpr
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Entity.Task))
                                  (w3 :: Database.Esqueleto.Internal.Internal.IdentState)[OneShot] ->
                                ((GHC.Tuple.(),
                                  Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.:
                                          @ Database.Esqueleto.Internal.Internal.SetClause
                                          (case lvl33 of wild { Database.Esqueleto.Internal.Internal.ESet val2 co f1 ->
                                           (f1
                                              task
                                                `cast`
                                              (Database.Esqueleto.Internal.Internal.SqlExpr
                                                 (Database.Persist.Class.PersistEntity.Entity
                                                    (Nth:0 co))_N)_R)
                                             `cast`
                                           (Sym (Database.Esqueleto.Internal.Internal.N:SetClause[0])) })
                                          (GHC.Types.[]
                                             @ Database.Esqueleto.Internal.Internal.SetClause))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))
                                    (Database.Esqueleto.Internal.Internal.SideData
                                       Database.Esqueleto.Internal.Internal.DistinctAll
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.FromClause)
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SetClause)
                                       (Database.Esqueleto.Internal.Internal.Where
                                          (Database.Esqueleto.Internal.Internal.unsafeSqlBinOpComposite
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Entity.Task)
                                             @ GHC.Types.Bool
                                             Database.Esqueleto.Internal.Internal.==.2
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             Database.Esqueleto.Internal.Internal.&&.1
                                               `cast`
                                             ((forall (s :: <*>_N).
                                               <Data.Text.Internal.Builder.Buffer s
                                                -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                               ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                               ->_R Sym (GHC.ST.N:ST[0]
                                                             <s>_N
                                                             <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                                             (Database.Esqueleto.Internal.Internal.$w^.
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Entity.Task)
                                                @ Entity.Task
                                                Entity.$fPersistEntityTask_$centityDef
                                                Entity.$fPersistEntityTask_$cpersistFieldDef
                                                task
                                                Query.setTaskDeadline3
                                                  `cast`
                                                (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                                            Entity.Task>_N))
                                             lvl35))
                                       (GHC.Types.[]
                                          @ Database.Esqueleto.Internal.Internal.SomeValue)
                                         `cast`
                                       (Sym (Database.Esqueleto.Internal.Internal.N:GroupByClause[0]))
                                       Database.Esqueleto.Internal.Internal.NoWhere
                                       (GHC.Types.[]
                                          @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                               Database.Esqueleto.Internal.Internal.OrderBy))
                                       Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty1
                                       (GHC.Maybe.Nothing
                                          @ Database.Esqueleto.Internal.Internal.LockingKind)
                                         `cast`
                                       (Sym (Data.Monoid.N:Last[0]) <Database.Esqueleto.Internal.Internal.LockingKind>_N))),
                                 w3))
                                 `cast`
                               (<Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Persist.Class.PersistEntity.Entity Entity.Task)>_R
                                ->_R (<Database.Esqueleto.Internal.Internal.IdentState>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <(((),
                                                       Database.Esqueleto.Internal.Internal.SideData),
                                                      Database.Esqueleto.Internal.Internal.IdentState)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                                        <Database.Esqueleto.Internal.Internal.IdentState>_N
                                                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                                                        <((),
                                                                                                                          Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                                                                                                         <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                                                                                                                         <Control.Monad.Trans.State.Lazy.State
                                                                                                                                                                                            Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                                                                                                                         <()>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <()>_N)))
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               Query.setTaskDeadline2
                               x2)
                              `cast`
                            (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)
                              eta1 of ds { (#,#) ipv ipv1 ->
                       (# ipv, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   w2) -}
8ac4325798ae703ac27f244416e15717
  getAfterMe ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getAfterMe1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
ad68d48d41a760badbb64aca88364f14
  getAfterMe1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetAfterMe ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
4e1ecf356a7e872ee3021a39b104a909
  getAllTrunkNode ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.IO
         [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getAllTrunkNode1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]>_R)) -}
10bdfa44a4fa2247b5cc1dd8862a7f59
  getAllTrunkNode1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int] #)
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
                   ww1
                   ww2
                   ww9
                   ww5
                   ww6
                   Query.getAllTrunkNode2
                   w1 } }) -}
af6d83f435b489109f7b7873ef758d84
  getAllTrunkNode2 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Types.IO
         [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                 Database.Persist.Sql.Run.$wrunSqlConn
                   @ GHC.Types.IO
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
                   Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                   Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                   @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                   Query.getAllTrunkNode3
                   x) -}
9b9c4ff2ea15ab29b7cf4e329727b305
  getAllTrunkNode3 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      GHC.Types.IO
      [Database.Esqueleto.Internal.Internal.Value GHC.Types.Int]
  {- Unfolding: (Database.Esqueleto.Internal.Internal.select
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                   @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)
                   @ GHC.Types.IO
                   Query.$s$fSqlSelectSqlExprValue1
                   Control.Monad.IO.Class.$fMonadIOIO
                   Query.getAllTrunkNode5
                     `cast`
                   (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Database.Esqueleto.Internal.Internal.IdentState>_N
                             <Data.Functor.Identity.Identity>_R
                             <(Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int),
                               Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                              <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                              <Control.Monad.Trans.State.Lazy.State
                                                                                                 Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                              <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                 (Database.Esqueleto.Internal.Internal.Value
                                                                                                    GHC.Types.Int)>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                     (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                        GHC.Types.Int)>_N))
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   Query.getAllTrunkNode4) -}
01939718c9497ac6135db6980389edf8
  getAllTrunkNode4 ::
    Database.Persist.Sql.Types.Internal.SqlBackendCanRead
      Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: (((GHC.Base.id
                     @ Database.Persist.Sql.Types.Internal.SqlBackend)
                    `cast`
                  (Sym (Database.Persist.Class.PersistStore.N:BackendCompatible[0]
                            <Database.Persist.Sql.Types.Internal.SqlBackend>_N
                            <Database.Persist.Sql.Types.Internal.SqlBackend>_N)),
                  Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend,
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreReadSqlBackend,
                  Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueReadSqlBackend)) -}
609f1e035944823ef7d54d6a9b3c22ab
  getAllTrunkNode5 ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> Data.Functor.Identity.Identity
         ((Database.Esqueleto.Internal.Internal.SqlExpr
             (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState)
  {- Arity: 1, Strictness: <L,U>m -}
38a14d59f2a53733372d189e7c08e278
  getArchivesAssigns ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getArchivesAssigns1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
ecef660826de1e6fd92f5135eb73c7f3
  getArchivesAssigns1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetArchivesAssigns ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
7b886ca1eb92d4e8bc451ae87dd409d6
  getBeforeMe ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getBeforeMe1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
e645e439512601e23c65c39ae03c7b5c
  getBeforeMe1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetBeforeMe ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
5475ab757b37166ff446b20d1fcd4311
  getBudsAssigns ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getBudsAssigns1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
da3b60b74a305ea92413ff568a27265d
  getBudsAssigns1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetBudsAssigns ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
c30d590968dd48579a8486e5a119c76f
  getDurationsById ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.Duration]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getDurationsById1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Entity.Duration]>_R)) -}
3a8a3df56551c0a2d58098f72bfc43e0
  getDurationsById1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.Duration] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetDurationsById ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
8d374285de7314d28d0af46d3be9ffa8
  getMaxNode' ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.IO
         [(Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int),
           Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int))]
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getMaxNode'1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int),
                                  Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int))]>_R)) -}
48f63af893af3be636248662342461df
  getMaxNode'1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Esqueleto.Internal.Internal.Value
              (GHC.Maybe.Maybe GHC.Types.Int),
            Database.Esqueleto.Internal.Internal.Value
              (GHC.Maybe.Maybe GHC.Types.Int))] #)
  {- Arity: 2,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [(Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int),
                       Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int))]
                   ww1
                   ww2
                   ww9
                   ww5
                   ww6
                   Query.getMaxNode'2
                   w1 } }) -}
0d90b9855567dd4a95145671d8dd0816
  getMaxNode'2 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Types.IO
         [(Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int),
           Database.Esqueleto.Internal.Internal.Value
             (GHC.Maybe.Maybe GHC.Types.Int))]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                 Database.Persist.Sql.Run.$wrunSqlConn
                   @ GHC.Types.IO
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [(Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int),
                       Database.Esqueleto.Internal.Internal.Value
                         (GHC.Maybe.Maybe GHC.Types.Int))]
                   Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                   Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                   @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                   Query.getMaxNode'3
                   x) -}
807232e6188927a07e0902c8ad6f4456
  getMaxNode'3 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      GHC.Types.IO
      [(Database.Esqueleto.Internal.Internal.Value
          (GHC.Maybe.Maybe GHC.Types.Int),
        Database.Esqueleto.Internal.Internal.Value
          (GHC.Maybe.Maybe GHC.Types.Int))]
  {- Unfolding: (Database.Esqueleto.Internal.Internal.select
                   @ (Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value
                           (GHC.Maybe.Maybe GHC.Types.Int)),
                      Database.Esqueleto.Internal.Internal.SqlExpr
                        (Database.Esqueleto.Internal.Internal.Value
                           (GHC.Maybe.Maybe GHC.Types.Int)))
                   @ (Database.Esqueleto.Internal.Internal.Value
                        (GHC.Maybe.Maybe GHC.Types.Int),
                      Database.Esqueleto.Internal.Internal.Value
                        (GHC.Maybe.Maybe GHC.Types.Int))
                   @ GHC.Types.IO
                   Query.$s$fSqlSelect(,)(,)
                   Control.Monad.IO.Class.$fMonadIOIO
                   Query.getMaxNode'4
                     `cast`
                   (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Database.Esqueleto.Internal.Internal.IdentState>_N
                             <Data.Functor.Identity.Identity>_R
                             <((Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int)),
                                Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Esqueleto.Internal.Internal.Value
                                     (GHC.Maybe.Maybe GHC.Types.Int))),
                               Database.Esqueleto.Internal.Internal.SideData)>_N) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                              <Database.Esqueleto.Internal.Internal.SideData>_N
                                                                                              <Control.Monad.Trans.State.Lazy.State
                                                                                                 Database.Esqueleto.Internal.Internal.IdentState>_R
                                                                                              <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                                     (GHC.Maybe.Maybe
                                                                                                        GHC.Types.Int)),
                                                                                                Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                                     (GHC.Maybe.Maybe
                                                                                                        GHC.Types.Int)))>_N) ; Sym (Database.Esqueleto.Internal.Internal.N:SqlQuery[0]) <(Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                            (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                               (GHC.Maybe.Maybe
                                                                                                                                                                                                  GHC.Types.Int)),
                                                                                                                                                                                          Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                            (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                               (GHC.Maybe.Maybe
                                                                                                                                                                                                  GHC.Types.Int)))>_N))
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   Query.getAllTrunkNode4) -}
92d71c8b1659dbcac00f57d9ce309a47
  getMaxNode'4 ::
    Database.Esqueleto.Internal.Internal.IdentState
    -> Data.Functor.Identity.Identity
         (((Database.Esqueleto.Internal.Internal.SqlExpr
              (Database.Esqueleto.Internal.Internal.Value
                 (GHC.Maybe.Maybe GHC.Types.Int)),
            Database.Esqueleto.Internal.Internal.SqlExpr
              (Database.Esqueleto.Internal.Internal.Value
                 (GHC.Maybe.Maybe GHC.Types.Int))),
           Database.Esqueleto.Internal.Internal.SideData),
          Database.Esqueleto.Internal.Internal.IdentState)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: (\ (w2 :: Database.Esqueleto.Internal.Internal.IdentState) ->
                 let {
                   ds1 :: Data.Functor.Identity.Identity
                            ((Database.Esqueleto.Internal.Internal.SqlExpr
                                (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)
                   = case Query.$w$dFrom w2 of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2)
                       `cast`
                     (Sym (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R)) }
                 } in
                 let {
                   task :: Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task)
                   = case ds1
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <((Database.Esqueleto.Internal.Internal.SqlExpr
                                    (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                  Database.Esqueleto.Internal.Internal.SideData),
                                 Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                     case a1 of wild1 { (,) a2 w3 -> a2 } }
                 } in
                 (((Database.Esqueleto.Internal.Internal.unsafeSqlFunction
                      @ (Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                      @ (GHC.Maybe.Maybe GHC.Types.Int)
                      (Database.Esqueleto.Internal.Internal.avg_4 @ GHC.Types.Int)
                        `cast`
                      (Sym (Database.Esqueleto.Internal.Internal.N:UnsafeSqlFunctionArgument[0]
                                <Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)>_N))
                      Database.Esqueleto.Internal.Internal.max_2
                        `cast`
                      ((forall (s :: <*>_N).
                        <Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                        ->_R Sym (GHC.ST.N:ST[0]
                                      <s>_N
                                      <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                      (Database.Esqueleto.Internal.Internal.$w^.
                         @ GHC.Types.Int
                         @ Entity.Task
                         Entity.$fPersistEntityTask_$centityDef
                         Entity.$fPersistEntityTask_$cpersistFieldDef
                         task
                         Query.getMaxNode'6
                           `cast`
                         (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Int>_N)),
                    Database.Esqueleto.Internal.Internal.unsafeSqlFunction
                      @ (Database.Esqueleto.Internal.Internal.SqlExpr
                           (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int))
                      @ (GHC.Maybe.Maybe GHC.Types.Int)
                      (Database.Esqueleto.Internal.Internal.avg_4 @ GHC.Types.Int)
                        `cast`
                      (Sym (Database.Esqueleto.Internal.Internal.N:UnsafeSqlFunctionArgument[0]
                                <Database.Esqueleto.Internal.Internal.SqlExpr
                                   (Database.Esqueleto.Internal.Internal.Value GHC.Types.Int)>_N))
                      Database.Esqueleto.Internal.Internal.max_2
                        `cast`
                      ((forall (s :: <*>_N).
                        <Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                        ->_R Sym (GHC.ST.N:ST[0]
                                      <s>_N
                                      <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0]))
                      (Database.Esqueleto.Internal.Internal.$w^.
                         @ GHC.Types.Int
                         @ Entity.Task
                         Entity.$fPersistEntityTask_$centityDef
                         Entity.$fPersistEntityTask_$cpersistFieldDef
                         task
                         Query.getMaxNode'5
                           `cast`
                         (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Int>_N))),
                   case ds1
                          `cast`
                        (Data.Functor.Identity.N:Identity[0]
                             <((Database.Esqueleto.Internal.Internal.SqlExpr
                                  (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                                Database.Esqueleto.Internal.Internal.SideData),
                               Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                   case a1 of wild1 { (,) a2 w3 ->
                   Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$c<>
                     w3
                     Database.Esqueleto.Internal.Internal.$fApplicativeSqlQuery_$cmempty } }),
                  case ds1
                         `cast`
                       (Data.Functor.Identity.N:Identity[0]
                            <((Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Persist.Class.PersistEntity.Entity Entity.Task),
                               Database.Esqueleto.Internal.Internal.SideData),
                              Database.Esqueleto.Internal.Internal.IdentState)>_R) of wild { (,) a1 s' ->
                  s' })
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(((Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int)),
                               Database.Esqueleto.Internal.Internal.SqlExpr
                                 (Database.Esqueleto.Internal.Internal.Value
                                    (GHC.Maybe.Maybe GHC.Types.Int))),
                              Database.Esqueleto.Internal.Internal.SideData),
                             Database.Esqueleto.Internal.Internal.IdentState)>_R))) -}
812c0e345a92a2e2f18103c501b37a63
  getMaxNode'5 :: Entity.R:EntityFieldTasktyp GHC.Types.Int
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Entity.TaskInitial
                   @ GHC.Types.Int
                   Query.$s$WDurationLeft_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Int>_N <GHC.Types.Int>_N)) -}
5695ff6135ef15a61665c88b9ea2353c
  getMaxNode'6 :: Entity.R:EntityFieldTasktyp GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Entity.TaskTerminal
                   @ GHC.Types.Int
                   Query.$s$WDurationLeft_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Int>_N <GHC.Types.Int>_N)) -}
024d4429bb2fb2ae40a124c72860e96b
  getMe ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getMe1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
a70bdeb05df007a99407c3ef40b7aca4
  getMe1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetMe ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
390e749eff12896a6456c85514c1e66d
  getTaskAssignById ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getTaskAssignById1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
830acdbc87c690fc9e44afa30ad68b24
  getTaskAssignById1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetTaskAssignById ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
d45fe584cd397cc1ac2cf72868641013
  getTrunkAssigns ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getTrunkAssigns1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
73cf1cf4f54644098b3467356a2624c8
  getTrunkAssigns1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetTrunkAssigns ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
256ed389aec77c1f7cada93eeb99f170
  getUndoneTaskAssigns ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
           Database.Esqueleto.Internal.Internal.Value
             Data.Text.Internal.Text)]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getUndoneTaskAssigns1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[(Database.Persist.Class.PersistEntity.Entity Entity.Task,
                                  Database.Esqueleto.Internal.Internal.Value
                                    Data.Text.Internal.Text)]>_R)) -}
88f42bd91b08134eeb109dfcd9eb6134
  getUndoneTaskAssigns1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Database.Persist.Class.PersistEntity.Entity Entity.Task,
            Database.Esqueleto.Internal.Internal.Value
              Data.Text.Internal.Text)] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetUndoneTaskAssigns ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
1ebfce5c8cb4407da2ea036620a6a37d
  getUserById ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Entity.User]
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.getUserById1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Entity.User]>_R)) -}
2f1c419cd2b921f0a3103e90ebf7e620
  getUserById1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Entity.User] #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wgetUserById ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
bdf5ca52fcca924e6e2ab4b6f3131e75
  insTasks :: [Entity.Task] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.insTasks1
                  `cast`
                (<[Entity.Task]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ef29e85c5c4559c02c4714b0ba6b55fa
  insTasks1 ::
    [Entity.Task]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (ts :: [Entity.Task])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Entity.pgPool
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Persist.Sql.Types.ConnectionPool>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww3 { Data.Pool.Pool ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww6 of ww11 { GHC.Types.I# ww12 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww4
                   ww5
                   ww12
                   ww8
                   ww9
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (Query.insTasks_go ts)
                      x)
                   ipv } } }) -}
a4f6dc4a772408130b93d8228aab2284
  insTasks_go ::
    [Entity.Task]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,1*U> -}
ed9f315e5898ff9656e0486cef27c1b1
  insUser :: Entity.User -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.insUser1
                  `cast`
                (<Entity.User>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8026d38354863a735f35944d79330faa
  insUser1 ::
    Entity.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (user :: Entity.User)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Entity.pgPool
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Persist.Sql.Types.ConnectionPool>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww3 { Data.Pool.Pool ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww6 of ww11 { GHC.Types.I# ww12 ->
                 Data.Pool.$w$swithResource
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ ()
                   ww4
                   ww5
                   ww12
                   ww8
                   ww9
                   (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot] ->
                    Database.Persist.Sql.Run.$wrunSqlConn
                      @ GHC.Types.IO
                      @ Database.Persist.Sql.Types.Internal.SqlBackend
                      @ ()
                      Control.Monad.IO.Unlift.$fMonadUnliftIOIO_$cwithRunInIO
                      Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend
                      @~ (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])
                      (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend)[OneShot]
                         (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case ((Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                                @ GHC.Types.IO
                                @ Entity.User
                                Control.Monad.IO.Class.$fMonadIOIO
                                Query.insUser2
                                  `cast`
                                (GHC.Classes.(%,%)
                                   <Database.Persist.Class.PersistEntity.PersistEntity
                                      Entity.User>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Entity.D:R:PersistEntityBackendUser[0]))
                                      (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                user)
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <GHC.Types.IO>_R
                                  <Database.Persist.Class.PersistEntity.Key Entity.User>_N)
                               r1)
                              `cast`
                            (GHC.Types.N:IO[0]
                                 <Database.Persist.Class.PersistEntity.Key Entity.User>_R)
                              s of ds2 { (#,#) ipv2 ipv3 ->
                       (# ipv2, GHC.Tuple.() #) })
                        `cast`
                      ((<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                                          <GHC.Types.IO>_R
                                                          <()>_N))
                      x)
                   ipv } } }) -}
7632036403890034779cfe892ad2f29c
  insUser2 ::
    (Database.Persist.Class.PersistEntity.PersistEntity Entity.User,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Entity.$fPersistEntityUser,
                  Query.insUser_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
6f3a22233daf64b133a464565cc6719d
  insUser_$d~~ ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
688450ce7195a5363497ccdf38f207d1
  keyFromInt ::
    GHC.Real.Integral a =>
    a
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dIntegral :: GHC.Real.Integral a) (x :: a) ->
                 case GHC.Integer.Type.integerToInt
                        (GHC.Real.toInteger @ a $dIntegral x) of wild { DEFAULT ->
                 (GHC.Int.I64# wild)
                   `cast`
                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]) ; Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])) }) -}
835b135732e4137b6de3900c411c1deb
  setStarSwitched ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setStarSwitched1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
03e656253213daecaa3c0141d4ae5dbe
  setStarSwitched1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetStarSwitched ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
4b41db83b65d389deebe9f891a7d99ac
  setTaskDeadline ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskDeadline1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3e66fa0b33ea2b097886024433a36550
  setTaskDeadline1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskDeadline ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
b46a57ea6032a2a649f31d204fc1940f
  setTaskDeadline2 ::
    Database.Persist.Sql.Types.Internal.SqlBackendCanWrite
      Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: ((Query.getAllTrunkNode4,
                  Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryWriteSqlBackend,
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend,
                  Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueWriteSqlBackend)) -}
2954a9c053d06c1369f42621afb527a1
  setTaskDeadline3 ::
    Entity.R:EntityFieldTasktyp
      (Database.Persist.Class.PersistEntity.Key Entity.Task)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Entity.TaskId
                   @ (Database.Persist.Class.PersistEntity.Key Entity.Task)
                   Query.$s$WTaskId_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Entity.Task>_N <Database.Persist.Class.PersistEntity.Key
                                                         Entity.Task>_N)) -}
b294c276a2b24f18034350af9a425b5c
  setTaskDeadline4 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
  {- HasNoCafRefs, Strictness: m11,
     Unfolding: (Entity.TaskDeadline
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   Query.$s$WTaskDeadline_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Time.Clock.Internal.UTCTime.UTCTime>_N <GHC.Maybe.Maybe
                                                                                                            Data.Time.Clock.Internal.UTCTime.UTCTime>_N)) -}
160e6856940e7b9359dafb4e54c10f03
  setTaskDone ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskDone1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0322ba90f9b029c9696e8a881a7cc7ed
  setTaskDone1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskDone ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
28dc2e25f18324e5b5d0d713e9daac26
  setTaskDone2 ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Esqueleto.Internal.Internal.Update Entity.Task)
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wsetAux
                   @ Entity.Task
                   @ GHC.Types.Bool
                   Entity.$fPersistEntityTask
                   Query.setTaskDone5
                     `cast`
                   (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Bool>_N)
                   Query.setTaskDone3) -}
9cefd0cc58e6dddddca3afb768e20691
  setTaskDone3 ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Persist.Class.PersistEntity.Entity Entity.Task)
    -> Database.Esqueleto.Internal.Internal.SqlExpr
         (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: (\ (ds1 :: Database.Esqueleto.Internal.Internal.SqlExpr
                             (Database.Persist.Class.PersistEntity.Entity Entity.Task)) ->
                 Query.setTaskDone_expr) -}
d254825a00866fb33a40afb7d5245dda
  setTaskDone4 ::
    Database.Esqueleto.Internal.Internal.IdentInfo
    -> (Data.Text.Internal.Builder.Builder,
        [Database.Persist.Types.Base.PersistValue])
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Database.Esqueleto.Internal.Internal.IdentInfo) ->
                 Query.setTaskDone_x5) -}
2c976350fa4d3eba8f999f68b16806ef
  setTaskDone5 :: Entity.R:EntityFieldTasktyp GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Entity.TaskIsDone
                   @ GHC.Types.Bool
                   Query.$s$WTaskIsDone_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Bool>_N <GHC.Types.Bool>_N)) -}
45e97516e8a04ee52bd9834f05a75feb
  setTaskDoneOrUndone ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskDoneOrUndone1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
bfe1114b6329743e1c927d1469bac6a0
  setTaskDoneOrUndone1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskDoneOrUndone ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
c638970228093d09eeeddb4d0c342e0f
  setTaskDone_expr ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
  {- Unfolding: (Database.Esqueleto.Internal.Internal.ERaw
                   @ (Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <Database.Esqueleto.Internal.Internal.Value GHC.Types.Bool>_N
                   Database.Esqueleto.Internal.Internal.Never
                   Query.setTaskDone4) -}
115b428b168ff008cbe42ecb222c2497
  setTaskDone_x3 :: Database.Persist.Types.Base.PersistValue
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Database.Persist.Types.Base.PersistBool
                   GHC.Types.True) -}
6bb23e6c72e40fb9ab60cb2e20bada77
  setTaskDone_x4 :: [Database.Persist.Types.Base.PersistValue]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   Query.setTaskDone_x3
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
ba59b618af0c6f704bc057aff7807137
  setTaskDone_x5 ::
    (Data.Text.Internal.Builder.Builder,
     [Database.Persist.Types.Base.PersistValue])
  {- Strictness: m,
     Unfolding: ((Database.Esqueleto.Internal.Internal.exists5
                    `cast`
                  ((forall (s :: <*>_N).
                    <Data.Text.Internal.Builder.Buffer s
                     -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                    ->_R <Data.Text.Internal.Builder.Buffer s>_R
                    ->_R Sym (GHC.ST.N:ST[0]
                                  <s>_N
                                  <[Data.Text.Internal.Text]>_R)) ; Sym (Data.Text.Internal.Builder.N:Builder[0])),
                  Query.setTaskDone_x4)) -}
f7775032bc48fa5499a33d003f84aca0
  setTaskLink ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> Data.Text.Internal.Text -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskLink1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d8a621c1783e1b3eb55277781070a1ee
  setTaskLink1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Text.Internal.Text)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskLink ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
182ae8389b257acce137cd025209c92b
  setTaskLink2 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Entity.TaskLink
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   Query.$s$WTaskLink_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Text.Internal.Text>_N <GHC.Maybe.Maybe
                                                                                           Data.Text.Internal.Text>_N)) -}
6f236df2f08a517ab8d0d41734440cb6
  setTaskStarred ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskStarred1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
40a067c7a09f391c2c393625c5b5cf3e
  setTaskStarred1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskStarred ww1 ww2 ww9 ww5 ww6 w1 w2 } }) -}
02f1663af64df62b772b261a446bd021
  setTaskStarred2 ::
    Database.Esqueleto.Internal.Internal.SqlExpr
      (Database.Esqueleto.Internal.Internal.Update Entity.Task)
  {- Unfolding: (Database.Esqueleto.Internal.Internal.$wsetAux
                   @ Entity.Task
                   @ GHC.Types.Bool
                   Entity.$fPersistEntityTask
                   Query.setTaskStarred3
                     `cast`
                   (Sym (Entity.D:R:EntityFieldTasktyp0[0]) <GHC.Types.Bool>_N)
                   Query.setTaskDone3) -}
e220a48e8645d670b256028a2b58c91c
  setTaskStarred3 :: Entity.R:EntityFieldTasktyp GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Entity.TaskIsStarred
                   @ GHC.Types.Bool
                   Query.$s$WTaskIsDone_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Bool>_N <GHC.Types.Bool>_N)) -}
775304c0a16768b7ef03dd700a5d6eb9
  setTaskStartable ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskStartable1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
246386dfc391a2c9cd758b55b25fa4dd
  setTaskStartable1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskStartable ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
e0b9ee4cf9e3056612cf1aac3ba9248c
  setTaskStartable2 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
  {- HasNoCafRefs, Strictness: m8,
     Unfolding: (Entity.TaskStartable
                   @ (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)
                   Query.$s$WTaskDeadline_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Time.Clock.Internal.UTCTime.UTCTime>_N <GHC.Maybe.Maybe
                                                                                                            Data.Time.Clock.Internal.UTCTime.UTCTime>_N)) -}
ffae24f612d531da478f0b58f81aa563
  setTaskTitle ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> Data.Text.Internal.Text -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskTitle1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
819c55dc66f3d81bab13999e4a4146d4
  setTaskTitle1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Text.Internal.Text)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskTitle ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
2554397c379627d2ad365f489ea04142
  setTaskTitle2 ::
    Entity.R:EntityFieldTasktyp
      (GHC.Maybe.Maybe Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m13,
     Unfolding: (Entity.TaskTitle
                   @ (GHC.Maybe.Maybe Data.Text.Internal.Text)
                   Query.$s$WTaskLink_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             Data.Text.Internal.Text>_N <GHC.Maybe.Maybe
                                                                                           Data.Text.Internal.Text>_N)) -}
6f66968594a3c93bf542ce6ac378c97b
  setTaskUser ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> Entity.UserId -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskUser1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Entity.UserId>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a8de86474bdd5f9208fc5905f465de89
  setTaskUser1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> Entity.UserId
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Entity.UserId)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskUser ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
58ec28404a1d31af402d84af4846a939
  setTaskUser2 ::
    Entity.R:EntityFieldTasktyp
      (Database.Persist.Class.PersistEntity.Key Entity.User)
  {- HasNoCafRefs, Strictness: m14,
     Unfolding: (Entity.TaskUser
                   @ (Database.Persist.Class.PersistEntity.Key Entity.User)
                   Query.$s$WDurationUser_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Entity.User>_N <Database.Persist.Class.PersistEntity.Key
                                                         Entity.User>_N)) -}
133e74c9818b7e70838cd19cbdd74295
  setTaskWeight ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Query.setTaskWeight1
                  `cast`
                (<Database.Persist.Sql.Types.ConnectionPool>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Double>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
69014e427d0a68ad7141b54669f630f1
  setTaskWeight1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LLS(S)LLLL),1*U(C(U),1*C1(C1(U)),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Persist.Sql.Types.ConnectionPool)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Double)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww3 of ww8 { GHC.Types.I# ww9 ->
                 Query.$wsetTaskWeight ww1 ww2 ww9 ww5 ww6 w1 w2 w3 } }) -}
ca15a481b4a28162912bb10923a09529
  setTaskWeight2 ::
    Entity.R:EntityFieldTasktyp (GHC.Maybe.Maybe GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m12,
     Unfolding: (Entity.TaskWeight
                   @ (GHC.Maybe.Maybe GHC.Types.Double)
                   Query.$s$WTaskWeight_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Maybe.Maybe
                                                             GHC.Types.Double>_N <GHC.Maybe.Maybe
                                                                                    GHC.Types.Double>_N)) -}
"SPEC/Query $fPersistFieldMaybe @ Int" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                               GHC.Types.Int)
  Database.Persist.Class.PersistField.$fPersistFieldMaybe @ GHC.Types.Int
                                                          v
  = Query.$s$fPersistFieldMaybe3
"SPEC/Query $fPersistFieldMaybe_$ctoPersistValue @ Int" [orphan] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                                             GHC.Types.Int)
  Database.Persist.Class.PersistField.$fPersistFieldMaybe_$ctoPersistValue @ GHC.Types.Int
                                                                           $dPersistField
  = Query.$s$fPersistFieldMaybe_$ctoPersistValue3
"SPEC/Query $fSqlSelect(,)(,) @ (SqlExpr
                                  (Value (Maybe Int))) @ (Value (Maybe Int)) @ (SqlExpr
                                                                                  (Value
                                                                                     (Maybe
                                                                                        Int))) @ (Value
                                                                                                    (Maybe
                                                                                                       Int))" [orphan] forall (v1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GHC.Types.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
v :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,) @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                 (GHC.Maybe.Maybe GHC.Types.Int)))
                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                              (GHC.Maybe.Maybe GHC.Types.Int))
                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                 (GHC.Maybe.Maybe GHC.Types.Int)))
                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                              (GHC.Maybe.Maybe GHC.Types.Int))
                                                         v
                                                         v1
  = Query.$s$fSqlSelect(,)(,)
"SPEC/Query $fSqlSelect(,)(,) @ (SqlExpr (Entity Task)) @ (Entity
                                                            Task) @ (SqlExpr (Value Text)) @ (Value
                                                                                                Text)" [orphan] forall (v1 :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                      (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                         (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                            Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                                      (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                         Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                             (v :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                     (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                        (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                           Entity.Task))
                                                                                                                                                                                                                                                                                                     (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                        Entity.Task))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,) @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Persist.Class.PersistEntity.Entity
                                                                 Entity.Task))
                                                         @ (Database.Persist.Class.PersistEntity.Entity
                                                              Entity.Task)
                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                 Data.Text.Internal.Text))
                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                              Data.Text.Internal.Text)
                                                         v
                                                         v1
  = Query.$s$fSqlSelect(,)(,)1
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectColCount @ (SqlExpr
                                                      (Value (Maybe Int))) @ (Value
                                                                                (Maybe
                                                                                   Int)) @ (SqlExpr
                                                                                              (Value
                                                                                                 (Maybe
                                                                                                    Int))) @ (Value
                                                                                                                (Maybe
                                                                                                                   Int))" [orphan] forall ($dSqlSelect1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 (Database.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ($dSqlSelect :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectColCount @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                     (GHC.Maybe.Maybe
                                                                                        GHC.Types.Int)))
                                                                             @ (Database.Esqueleto.Internal.Internal.Value
                                                                                  (GHC.Maybe.Maybe
                                                                                     GHC.Types.Int))
                                                                             @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                  (Database.Esqueleto.Internal.Internal.Value
                                                                                     (GHC.Maybe.Maybe
                                                                                        GHC.Types.Int)))
                                                                             @ (Database.Esqueleto.Internal.Internal.Value
                                                                                  (GHC.Maybe.Maybe
                                                                                     GHC.Types.Int))
                                                                             $dSqlSelect
                                                                             $dSqlSelect1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectColCount1
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectCols @ (SqlExpr
                                                  (Entity Task)) @ (Entity Task) @ (SqlExpr
                                                                                      (Value
                                                                                         Text)) @ (Value
                                                                                                     Text)" [orphan] [2] forall (w1 :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Database.Esqueleto.Internal.Internal.Value
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Data.Text.Internal.Text))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (w :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Entity.Task))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Database.Persist.Class.PersistEntity.Entity
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Entity.Task))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Persist.Class.PersistEntity.Entity
                                                                                 Entity.Task))
                                                                         @ (Database.Persist.Class.PersistEntity.Entity
                                                                              Entity.Task)
                                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                                 Data.Text.Internal.Text))
                                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                                              Data.Text.Internal.Text)
                                                                         w
                                                                         w1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectCols1
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectCols @ (SqlExpr
                                                  (Value (Maybe Int))) @ (Value
                                                                            (Maybe Int)) @ (SqlExpr
                                                                                              (Value
                                                                                                 (Maybe
                                                                                                    Int))) @ (Value
                                                                                                                (Maybe
                                                                                                                   Int))" [orphan] [2] forall (w1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
w :: Database.Esqueleto.Internal.Internal.SqlSelect
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (Database.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
atabase.Esqueleto.Internal.Internal.Value
aybe.Maybe
ypes.Int)))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectCols @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                                 (GHC.Maybe.Maybe
                                                                                    GHC.Types.Int)))
                                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                                              (GHC.Maybe.Maybe
                                                                                 GHC.Types.Int))
                                                                         @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                              (Database.Esqueleto.Internal.Internal.Value
                                                                                 (GHC.Maybe.Maybe
                                                                                    GHC.Types.Int)))
                                                                         @ (Database.Esqueleto.Internal.Internal.Value
                                                                              (GHC.Maybe.Maybe
                                                                                 GHC.Types.Int))
                                                                         w
                                                                         w1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectCols
"SPEC/Query $fSqlSelect(,)(,)_$csqlSelectProcessRow @ (SqlExpr
                                                        (Entity Task)) @ (Entity Task) @ (SqlExpr
                                                                                            (Value
                                                                                               Text)) @ (Value
                                                                                                           Text)" [orphan] [2] forall (w1 :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
atabase.Esqueleto.Internal.Internal.Value
ata.Text.Internal.Text))
atabase.Esqueleto.Internal.Internal.Value
ata.Text.Internal.Text))
w :: Database.Esqueleto.Internal.Internal.SqlSelect
atabase.Esqueleto.Internal.Internal.SqlExpr
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Database.Persist.Class.PersistEntity.Entity
ntity.Task))
atabase.Persist.Class.PersistEntity.Entity
ntity.Task))
  Database.Esqueleto.Internal.Internal.$fSqlSelect(,)(,)_$csqlSelectProcessRow @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                    (Database.Persist.Class.PersistEntity.Entity
                                                                                       Entity.Task))
                                                                               @ (Database.Persist.Class.PersistEntity.Entity
                                                                                    Entity.Task)
                                                                               @ (Database.Esqueleto.Internal.Internal.SqlExpr
                                                                                    (Database.Esqueleto.Internal.Internal.Value
                                                                                       Data.Text.Internal.Text))
                                                                               @ (Database.Esqueleto.Internal.Internal.Value
                                                                                    Data.Text.Internal.Text)
                                                                               w
                                                                               w1
  = Query.$s$fSqlSelect(,)(,)_$csqlSelectProcessRow
"SPEC/Query $fSqlSelectSqlExprEntity @ Duration" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                         Entity.Duration)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.Duration
                                                                v
  = Query.$s$fSqlSelectSqlExprEntity
"SPEC/Query $fSqlSelectSqlExprEntity @ Task" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                     Entity.Task)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.Task
                                                                v
  = Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprEntity
"SPEC/Query $fSqlSelectSqlExprEntity @ User" [orphan] forall (v :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                     Entity.User)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity @ Entity.User
                                                                v
  = Query.$s$fSqlSelectSqlExprEntity1
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ Duration" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                             Entity.Duration)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.Duration
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ Task" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.Task)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.Task
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto2
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlInsertInto @ User" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.User)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlInsertInto @ Entity.User
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlInsertInto1
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ Duration" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                             Entity.Duration)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.Duration
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ Task" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.Task)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.Task
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols2
"SPEC/Query $fSqlSelectSqlExprEntity_$csqlSelectCols @ User" [orphan] [2] forall (w :: Database.Persist.Class.PersistEntity.PersistEntity
                                                                                         Entity.User)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprEntity_$csqlSelectCols @ Entity.User
                                                                                w
  = Query.$s$fSqlSelectSqlExprEntity_$csqlSelectCols1
"SPEC/Query $fSqlSelectSqlExprValue @ (Maybe Int)" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                           (GHC.Maybe.Maybe
                                                                              GHC.Types.Int))
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ (GHC.Maybe.Maybe
                                                                    GHC.Types.Int)
                                                               v
  = Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue
"SPEC/Query $fSqlSelectSqlExprValue @ Bool" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                    GHC.Types.Bool)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ GHC.Types.Bool
                                                               v
  = Query.$s$fSqlSelectSqlExprValue
"SPEC/Query $fSqlSelectSqlExprValue @ Int" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                   GHC.Types.Int)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ GHC.Types.Int
                                                               v
  = Query.$s$fSqlSelectSqlExprValue1
"SPEC/Query $fSqlSelectSqlExprValue @ Text" [orphan] forall (v :: Database.Persist.Class.PersistField.PersistField
                                                                    Data.Text.Internal.Text)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue @ Data.Text.Internal.Text
                                                               v
  = Query.$s$fSqlSelect(,)(,)_$s$fSqlSelectSqlExprValue1
"SPEC/Query $fSqlSelectSqlExprValue_$csqlInsertInto @ Int" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                       GHC.Types.Int)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto @ GHC.Types.Int
                                                                               w
  = Query.$s$fSqlSelectSqlExprValue_$csqlInsertInto2
"SPEC/Query $fSqlSelectSqlExprValue_$csqlInsertInto @ Text" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                        Data.Text.Internal.Text)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlInsertInto @ Data.Text.Internal.Text
                                                                               w
  = Query.$s$fSqlSelectSqlExprValue_$csqlInsertInto
"SPEC/Query $fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Bool" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                              GHC.Types.Bool)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow @ GHC.Types.Bool
                                                                                     w
  = Query.$s$fSqlSelectSqlExprValue_$csqlSelectProcessRow2
"SPEC/Query $fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Int" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                             GHC.Types.Int)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow @ GHC.Types.Int
                                                                                     w
  = Query.$s$fSqlSelectSqlExprValue_$csqlSelectProcessRow3
"SPEC/Query $fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Text" [orphan] [2] forall (w :: Database.Persist.Class.PersistField.PersistField
                                                                                              Data.Text.Internal.Text)
  Database.Esqueleto.Internal.Internal.$fSqlSelectSqlExprValue_$csqlSelectProcessRow @ Data.Text.Internal.Text
                                                                                     w
  = Query.$s$fSqlSelectSqlExprValue_$csqlSelectProcessRow1
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

